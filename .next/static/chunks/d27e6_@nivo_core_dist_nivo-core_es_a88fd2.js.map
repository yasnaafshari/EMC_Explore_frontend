{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"nivo-core.es.js","sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/theming/defaultTheme.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/theming/extend.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/motion/context.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/motion/hooks.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/hooks/useAnimatedPath.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/colors/quantize.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/colors/index.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/props/colors.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/props/curve.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/props/stack.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/props/index.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/hooks/useCurveInterpolation.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/defaults/index.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/hooks/useDimensions.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/hooks/useMeasure.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/hooks/usePartialTheme.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/hooks/useValueFormatter.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/theming/context.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/theming/helpers.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/ConditionalWrapper.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/Container.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/noop.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/LegacyContainer.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/ResponsiveWrapper.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/defs/gradients/LinearGradient.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/defs/gradients/index.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/defs/patterns/PatternDots.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/polar/utils.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/bridge.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/polar/labels.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/defs/patterns/PatternLines.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/defs/patterns/PatternSquares.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/defs/patterns/index.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/defs/Defs.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/SvgWrapper.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/dots/DotsItemSymbol.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/dots/DotsItem.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/cartesian/markers/CartesianMarkersItem.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/components/cartesian/markers/CartesianMarkers.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/hocs/withContainer.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/propertiesConverters.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/cartesian/utils.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/interactivity/detect.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/interactivity/index.js","file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40nivo%2Bcore%400.88.0_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/%40nivo/core/src/lib/defs.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * @type ThemeWithoutInheritance\n */\nexport const defaultTheme = {\n    background: 'transparent',\n    text: {\n        fontFamily: 'sans-serif',\n        fontSize: 11,\n        fill: '#333333',\n        outlineWidth: 0,\n        outlineColor: 'transparent',\n        outlineOpacity: 1,\n    },\n    axis: {\n        domain: {\n            line: {\n                stroke: 'transparent',\n                strokeWidth: 1,\n            },\n        },\n        ticks: {\n            line: {\n                stroke: '#777777',\n                strokeWidth: 1,\n            },\n            text: {},\n        },\n        legend: {\n            text: {\n                fontSize: 12,\n            },\n        },\n    },\n    grid: {\n        line: {\n            stroke: '#dddddd',\n            strokeWidth: 1,\n        },\n    },\n    legends: {\n        hidden: {\n            symbol: {\n                fill: '#333333',\n                opacity: 0.6,\n            },\n            text: {\n                fill: '#333333',\n                opacity: 0.6,\n            },\n        },\n        text: {},\n        ticks: {\n            line: {\n                stroke: '#777777',\n                strokeWidth: 1,\n            },\n            text: {\n                fontSize: 10,\n            },\n        },\n        title: {\n            text: {},\n        },\n    },\n    labels: {\n        text: {},\n    },\n    markers: {\n        lineColor: '#000000',\n        lineStrokeWidth: 1,\n        text: {},\n    },\n    dots: {\n        text: {},\n    },\n    tooltip: {\n        container: {\n            background: 'white',\n            color: 'inherit',\n            fontSize: 'inherit',\n            borderRadius: '2px',\n            boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',\n            padding: '5px 9px',\n        },\n        basic: {\n            whiteSpace: 'pre',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        chip: {\n            marginRight: 7,\n        },\n        table: {},\n        tableCell: {\n            padding: '3px 5px',\n        },\n        tableCellValue: {\n            fontWeight: 'bold',\n        },\n    },\n    crosshair: {\n        line: {\n            stroke: '#000000',\n            strokeWidth: 1,\n            strokeOpacity: 0.75,\n            strokeDasharray: '6 6',\n        },\n    },\n    annotations: {\n        text: {\n            fontSize: 13,\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n        link: {\n            stroke: '#000000',\n            strokeWidth: 1,\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n        outline: {\n            fill: 'none',\n            stroke: '#000000',\n            strokeWidth: 2,\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n        symbol: {\n            fill: '#000000',\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n    },\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport merge from 'lodash/merge'\nimport get from 'lodash/get'\nimport set from 'lodash/set'\n\nconst textPropsWithInheritance = [\n    'axis.ticks.text',\n    'axis.legend.text',\n    'legends.title.text',\n    'legends.text',\n    'legends.ticks.text',\n    'legends.title.text',\n    'labels.text',\n    'dots.text',\n    'markers.text',\n    'annotations.text',\n]\n\n/**\n * @param {Partial<TextStyle>} partialStyle\n * @param {TextStyle} rootStyle\n * @returns {TextStyle}\n */\nexport const inheritRootThemeText = (partialStyle, rootStyle) => ({\n    ...rootStyle,\n    ...partialStyle,\n})\n\n/**\n * @param {ThemeWithoutInheritance} defaultTheme\n * @param {Theme} customTheme\n * @returns {CompleteTheme}\n */\nexport const extendDefaultTheme = (defaultTheme, customTheme) => {\n    const theme = merge({}, defaultTheme, customTheme)\n\n    textPropsWithInheritance.forEach(prop => {\n        set(theme, prop, inheritRootThemeText(get(theme, prop), theme.text))\n    })\n\n    return theme\n}\n","import { createContext, useMemo } from 'react'\nimport isString from 'lodash/isString'\nimport PropTypes from 'prop-types'\nimport { config as presets } from '@react-spring/web'\n\nexport const motionConfigContext = createContext()\n\nexport const motionDefaultProps = {\n    animate: true,\n    config: 'default',\n}\n\nexport const MotionConfigProvider = props => {\n    const { children, animate = true, config = 'default' } = props\n\n    const value = useMemo(() => {\n        const reactSpringConfig = isString(config) ? presets[config] : config\n\n        return {\n            animate,\n            config: reactSpringConfig,\n        }\n    }, [animate, config])\n\n    return <motionConfigContext.Provider value={value}>{children}</motionConfigContext.Provider>\n}\n\nexport const motionPropTypes = {\n    animate: PropTypes.bool,\n    motionConfig: PropTypes.oneOfType([\n        PropTypes.oneOf(Object.keys(presets)),\n        PropTypes.shape({\n            mass: PropTypes.number,\n            tension: PropTypes.number,\n            friction: PropTypes.number,\n            clamp: PropTypes.bool,\n            precision: PropTypes.number,\n            velocity: PropTypes.number,\n            duration: PropTypes.number,\n            easing: PropTypes.func,\n        }),\n    ]),\n}\n\nMotionConfigProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n    animate: motionPropTypes.animate,\n    config: motionPropTypes.motionConfig,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useContext } from 'react'\nimport { motionConfigContext } from './context'\n\nexport const useMotionConfig = () => useContext(motionConfigContext)\n","import { interpolateString } from 'd3-interpolate'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useSpring, to } from '@react-spring/web'\nimport { useMotionConfig } from '../motion'\n\nconst usePrevious = value => {\n    const ref = useRef()\n\n    useEffect(() => {\n        ref.current = value\n    }, [value])\n\n    return ref.current\n}\n\nexport const useAnimatedPath = path => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const previousPath = usePrevious(path)\n    const interpolator = useMemo(() => interpolateString(previousPath, path), [previousPath, path])\n\n    const { value } = useSpring({\n        from: { value: 0 },\n        to: { value: 1 },\n        reset: true,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return to(value, interpolator)\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport last from 'lodash/last'\nimport isArray from 'lodash/isArray'\nimport isFunction from 'lodash/isFunction'\nimport { scaleQuantize } from 'd3-scale'\nimport {\n    // Diverging\n    schemeBrBG,\n    schemePRGn,\n    schemePiYG,\n    schemePuOr,\n    schemeRdBu,\n    schemeRdGy,\n    schemeRdYlBu,\n    schemeRdYlGn,\n    schemeSpectral,\n\n    // Sequential (Single Hue)\n    schemeBlues,\n    schemeGreens,\n    schemeGreys,\n    schemeOranges,\n    schemePurples,\n    schemeReds,\n\n    // Sequential (Multi-Hue)\n    schemeBuGn,\n    schemeBuPu,\n    schemeGnBu,\n    schemeOrRd,\n    schemePuBuGn,\n    schemePuBu,\n    schemePuRd,\n    schemeRdPu,\n    schemeYlGnBu,\n    schemeYlGn,\n    schemeYlOrBr,\n    schemeYlOrRd,\n} from 'd3-scale-chromatic'\n\nexport const quantizeColorScales = {\n    nivo: ['#d76445', '#f47560', '#e8c1a0', '#97e3d5', '#61cdbb', '#00b0a7'],\n\n    // Diverging\n    BrBG: last(schemeBrBG),\n    PRGn: last(schemePRGn),\n    PiYG: last(schemePiYG),\n    PuOr: last(schemePuOr),\n    RdBu: last(schemeRdBu),\n    RdGy: last(schemeRdGy),\n    RdYlBu: last(schemeRdYlBu),\n    RdYlGn: last(schemeRdYlGn),\n    spectral: last(schemeSpectral),\n\n    // Sequential (Single Hue)\n    blues: last(schemeBlues),\n    greens: last(schemeGreens),\n    greys: last(schemeGreys),\n    oranges: last(schemeOranges),\n    purples: last(schemePurples),\n    reds: last(schemeReds),\n\n    // Sequential (Multi-Hue)\n    BuGn: last(schemeBuGn),\n    BuPu: last(schemeBuPu),\n    GnBu: last(schemeGnBu),\n    OrRd: last(schemeOrRd),\n    PuBuGn: last(schemePuBuGn),\n    PuBu: last(schemePuBu),\n    PuRd: last(schemePuRd),\n    RdPu: last(schemeRdPu),\n    YlGnBu: last(schemeYlGnBu),\n    YlGn: last(schemeYlGn),\n    YlOrBr: last(schemeYlOrBr),\n    YlOrRd: last(schemeYlOrRd),\n}\n\nexport const quantizeColorScalesKeys = Object.keys(quantizeColorScales)\n\nexport const guessQuantizeColorScale = colors => {\n    // colors is already a valid scale\n    if (isFunction(colors)) {\n        if (!isFunction(colors.domain)) {\n            throw new Error(\n                `Provided colors should be a valid quantize scale providing a 'domain()' function`\n            )\n        }\n\n        return colors\n    }\n\n    if (quantizeColorScales[colors]) {\n        // use predefined d3 quantize color scale\n        return scaleQuantize().range(quantizeColorScales[colors])\n    }\n\n    // user defined colors\n    if (isArray(colors)) return scaleQuantize().range(colors)\n\n    throw new Error(\n        `Unable to guess quantize color scale from '${colors}',\\nmust be a function or one of:\\n'${quantizeColorScalesKeys.join(\n            `', '`\n        )}'`\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport last from 'lodash/last'\nimport isArray from 'lodash/isArray'\nimport isString from 'lodash/isString'\nimport { scaleOrdinal, scaleSequential } from 'd3-scale'\nimport {\n    // categorical\n    schemeCategory10,\n    schemeAccent,\n    schemeDark2,\n    schemePaired,\n    schemePastel1,\n    schemePastel2,\n    schemeSet1,\n    schemeSet2,\n    schemeSet3,\n    // diverging\n    interpolateBrBG,\n    schemeBrBG,\n    interpolatePRGn,\n    schemePRGn,\n    interpolatePiYG,\n    schemePiYG,\n    interpolatePuOr,\n    schemePuOr,\n    interpolateRdBu,\n    schemeRdBu,\n    interpolateRdGy,\n    schemeRdGy,\n    interpolateRdYlBu,\n    schemeRdYlBu,\n    interpolateRdYlGn,\n    schemeRdYlGn,\n    interpolateSpectral,\n    schemeSpectral,\n    // sequential single hue\n    interpolateBlues,\n    schemeBlues,\n    interpolateGreens,\n    schemeGreens,\n    interpolateGreys,\n    schemeGreys,\n    interpolateOranges,\n    schemeOranges,\n    interpolatePurples,\n    schemePurples,\n    interpolateReds,\n    schemeReds,\n    // sequential multi hue\n    interpolateViridis,\n    interpolateInferno,\n    interpolateMagma,\n    interpolatePlasma,\n    interpolateWarm,\n    interpolateCool,\n    interpolateCubehelixDefault,\n    interpolateBuGn,\n    schemeBuGn,\n    interpolateBuPu,\n    schemeBuPu,\n    interpolateGnBu,\n    schemeGnBu,\n    interpolateOrRd,\n    schemeOrRd,\n    interpolatePuBuGn,\n    schemePuBuGn,\n    interpolatePuBu,\n    schemePuBu,\n    interpolatePuRd,\n    schemePuRd,\n    interpolateRdPu,\n    schemeRdPu,\n    interpolateYlGnBu,\n    schemeYlGnBu,\n    interpolateYlGn,\n    schemeYlGn,\n    interpolateYlOrBr,\n    schemeYlOrBr,\n    interpolateYlOrRd,\n    schemeYlOrRd,\n    // cyclical\n    interpolateRainbow,\n    interpolateSinebow,\n} from 'd3-scale-chromatic'\n\n// used for ordinal color scales\nconst colorSchemes = {\n    nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n    // categorical\n    category10: schemeCategory10,\n    accent: schemeAccent,\n    dark2: schemeDark2,\n    paired: schemePaired,\n    pastel1: schemePastel1,\n    pastel2: schemePastel2,\n    set1: schemeSet1,\n    set2: schemeSet2,\n    set3: schemeSet3,\n    // diverging\n    brown_blueGreen: last(schemeBrBG),\n    purpleRed_green: last(schemePRGn),\n    pink_yellowGreen: last(schemePiYG),\n    purple_orange: last(schemePuOr),\n    red_blue: last(schemeRdBu),\n    red_grey: last(schemeRdGy),\n    red_yellow_blue: last(schemeRdYlBu),\n    red_yellow_green: last(schemeRdYlGn),\n    spectral: last(schemeSpectral),\n    // sequential single hue\n    blues: last(schemeBlues),\n    greens: last(schemeGreens),\n    greys: last(schemeGreys),\n    oranges: last(schemeOranges),\n    purples: last(schemePurples),\n    reds: last(schemeReds),\n    // sequential multi hue\n    blue_green: last(schemeBuGn),\n    blue_purple: last(schemeBuPu),\n    green_blue: last(schemeGnBu),\n    orange_red: last(schemeOrRd),\n    purple_blue_green: last(schemePuBuGn),\n    purple_blue: last(schemePuBu),\n    purple_red: last(schemePuRd),\n    red_purple: last(schemeRdPu),\n    yellow_green_blue: last(schemeYlGnBu),\n    yellow_green: last(schemeYlGn),\n    yellow_orange_brown: last(schemeYlOrBr),\n    yellow_orange_red: last(schemeYlOrRd),\n}\n\nexport const colorSchemeIds = [\n    'nivo',\n    // categorical\n    'category10',\n    'accent',\n    'dark2',\n    'paired',\n    'pastel1',\n    'pastel2',\n    'set1',\n    'set2',\n    'set3',\n    // diverging\n    'brown_blueGreen',\n    'purpleRed_green',\n    'pink_yellowGreen',\n    'purple_orange',\n    'red_blue',\n    'red_grey',\n    'red_yellow_blue',\n    'red_yellow_green',\n    'spectral',\n    // sequential single hue\n    'blues',\n    'greens',\n    'greys',\n    'oranges',\n    'purples',\n    'reds',\n    // sequential multi hue\n    'blue_green',\n    'blue_purple',\n    'green_blue',\n    'orange_red',\n    'purple_blue_green',\n    'purple_blue',\n    'purple_red',\n    'red_purple',\n    'yellow_green_blue',\n    'yellow_green',\n    'yellow_orange_brown',\n    'yellow_orange_red',\n]\n\n// used for sequential color scales\nexport const colorInterpolators = {\n    // diverging\n    brown_blueGreen: interpolateBrBG,\n    purpleRed_green: interpolatePRGn,\n    pink_yellowGreen: interpolatePiYG,\n    purple_orange: interpolatePuOr,\n    red_blue: interpolateRdBu,\n    red_grey: interpolateRdGy,\n    red_yellow_blue: interpolateRdYlBu,\n    red_yellow_green: interpolateRdYlGn,\n    spectral: interpolateSpectral,\n    // sequential single hue\n    blues: interpolateBlues,\n    greens: interpolateGreens,\n    greys: interpolateGreys,\n    oranges: interpolateOranges,\n    purples: interpolatePurples,\n    reds: interpolateReds,\n    // sequential multi hue\n    viridis: interpolateViridis,\n    inferno: interpolateInferno,\n    magma: interpolateMagma,\n    plasma: interpolatePlasma,\n    warm: interpolateWarm,\n    cool: interpolateCool,\n    cubehelixDefault: interpolateCubehelixDefault,\n    blue_green: interpolateBuGn,\n    blue_purple: interpolateBuPu,\n    green_blue: interpolateGnBu,\n    orange_red: interpolateOrRd,\n    purple_blue_green: interpolatePuBuGn,\n    purple_blue: interpolatePuBu,\n    purple_red: interpolatePuRd,\n    red_purple: interpolateRdPu,\n    yellow_green_blue: interpolateYlGnBu,\n    yellow_green: interpolateYlGn,\n    yellow_orange_brown: interpolateYlOrBr,\n    yellow_orange_red: interpolateYlOrRd,\n    // cyclical\n    rainbow: interpolateRainbow,\n    sinebow: interpolateSinebow,\n}\n\nexport const colorInterpolatorIds = [\n    // diverging\n    'brown_blueGreen',\n    'purpleRed_green',\n    'pink_yellowGreen',\n    'purple_orange',\n    'red_blue',\n    'red_grey',\n    'red_yellow_blue',\n    'red_yellow_green',\n    'spectral',\n    // sequential single hue\n    'blues',\n    'greens',\n    'greys',\n    'oranges',\n    'purples',\n    'reds',\n    // sequential multi hue\n    'viridis',\n    'inferno',\n    'magma',\n    'plasma',\n    'warm',\n    'cool',\n    'cubehelixDefault',\n    'blue_green',\n    'blue_purple',\n    'green_blue',\n    'orange_red',\n    'purple_blue_green',\n    'purple_blue',\n    'purple_red',\n    'red_purple',\n    'yellow_green_blue',\n    'yellow_green',\n    'yellow_orange_brown',\n    'yellow_orange_red',\n    // cyclical\n    'rainbow',\n    'sinebow',\n]\n\nexport const nivoCategoricalColors = () =>\n    scaleOrdinal(['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'])\n\nexport const getColorScale = (colors, dataScale) => {\n    if (isString(colors)) {\n        const scheme = colorSchemes[colors]\n        if (scheme !== undefined) {\n            const scale = scaleOrdinal(scheme)\n            scale.type = 'ordinal'\n\n            return scale\n        }\n\n        if (dataScale !== undefined && colors.indexOf('seq:') === 0) {\n            const interpolator = colorInterpolators[colors.slice(4)]\n            if (interpolator !== undefined) {\n                const scale = scaleSequential(interpolator).domain(dataScale.domain())\n                scale.type = 'sequential'\n\n                return scale\n            }\n        }\n    }\n\n    if (isArray(colors)) {\n        const scale = scaleOrdinal(colors)\n        scale.type = 'ordinal'\n\n        return scale\n    }\n\n    // just use provided value,\n    // all elements will have identical color\n    return () => colors\n}\n\nexport * from './quantize'\n","import PropTypes from 'prop-types'\nimport { quantizeColorScalesKeys } from '../lib/colors'\n\nexport const quantizeColorScalePropType = PropTypes.oneOfType([\n    PropTypes.oneOf(quantizeColorScalesKeys),\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.string),\n])\n","import without from 'lodash/without'\nimport {\n    curveBasis,\n    curveBasisClosed,\n    curveBasisOpen,\n    curveBundle,\n    curveCardinal,\n    curveCardinalClosed,\n    curveCardinalOpen,\n    curveCatmullRom,\n    curveCatmullRomClosed,\n    curveCatmullRomOpen,\n    curveLinear,\n    curveLinearClosed,\n    curveMonotoneX,\n    curveMonotoneY,\n    curveNatural,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n} from 'd3-shape'\n\nexport const curvePropMapping = {\n    basis: curveBasis,\n    basisClosed: curveBasisClosed,\n    basisOpen: curveBasisOpen,\n    bundle: curveBundle,\n    cardinal: curveCardinal,\n    cardinalClosed: curveCardinalClosed,\n    cardinalOpen: curveCardinalOpen,\n    catmullRom: curveCatmullRom,\n    catmullRomClosed: curveCatmullRomClosed,\n    catmullRomOpen: curveCatmullRomOpen,\n    linear: curveLinear,\n    linearClosed: curveLinearClosed,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore,\n}\n\nexport const curvePropKeys = Object.keys(curvePropMapping)\n\nexport const closedCurvePropKeys = curvePropKeys.filter(c => c.endsWith('Closed'))\n\n// Safe curves to be used with d3 area shape generator\nexport const areaCurvePropKeys = without(\n    curvePropKeys,\n    'bundle',\n    'basisClosed',\n    'basisOpen',\n    'cardinalClosed',\n    'cardinalOpen',\n    'catmullRomClosed',\n    'catmullRomOpen',\n    'linearClosed'\n)\n\n// Safe curves to be used with d3 line shape generator\nexport const lineCurvePropKeys = without(\n    curvePropKeys,\n    'bundle',\n    'basisClosed',\n    'basisOpen',\n    'cardinalClosed',\n    'cardinalOpen',\n    'catmullRomClosed',\n    'catmullRomOpen',\n    'linearClosed'\n)\n\n/**\n * Returns curve interpolator from given identifier.\n *\n * @param {string} id - Curve interpolator identifier\n * @return {Function}\n */\nexport const curveFromProp = id => {\n    const curveInterpolator = curvePropMapping[id]\n    if (!curveInterpolator) {\n        throw new TypeError(`'${id}', is not a valid curve interpolator identifier.`)\n    }\n\n    return curvePropMapping[id]\n}\n","import {\n    // order\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOrderInsideOut,\n    stackOrderNone,\n    stackOrderReverse,\n    // offset\n    stackOffsetExpand,\n    stackOffsetDiverging,\n    stackOffsetNone,\n    stackOffsetSilhouette,\n    stackOffsetWiggle,\n} from 'd3-shape'\n\nexport const stackOrderPropMapping = {\n    ascending: stackOrderAscending,\n    descending: stackOrderDescending,\n    insideOut: stackOrderInsideOut,\n    none: stackOrderNone,\n    reverse: stackOrderReverse,\n}\n\nexport const stackOrderPropKeys = Object.keys(stackOrderPropMapping)\n\nexport const stackOrderFromProp = prop => stackOrderPropMapping[prop]\n\nexport const stackOffsetPropMapping = {\n    expand: stackOffsetExpand,\n    diverging: stackOffsetDiverging,\n    none: stackOffsetNone,\n    silhouette: stackOffsetSilhouette,\n    wiggle: stackOffsetWiggle,\n}\n\nexport const stackOffsetPropKeys = Object.keys(stackOffsetPropMapping)\n\nexport const stackOffsetFromProp = prop => stackOffsetPropMapping[prop]\n","import PropTypes from 'prop-types'\n\nexport const marginPropType = PropTypes.shape({\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n}).isRequired\n\nexport const blendModes = [\n    'normal',\n    'multiply',\n    'screen',\n    'overlay',\n    'darken',\n    'lighten',\n    'color-dodge',\n    'color-burn',\n    'hard-light',\n    'soft-light',\n    'difference',\n    'exclusion',\n    'hue',\n    'saturation',\n    'color',\n    'luminosity',\n]\n\nexport const blendModePropType = PropTypes.oneOf(blendModes)\n\nexport * from './colors'\nexport * from './curve'\nexport * from './stack'\n","import { useMemo } from 'react'\nimport { curveFromProp } from '../props'\n\n/**\n * Transform d3 curve interpolation identifier\n * to its corresponding interpolator.\n */\nexport const useCurveInterpolation = interpolation =>\n    useMemo(() => curveFromProp(interpolation), [interpolation])\n","import { scaleOrdinal } from 'd3-scale'\nimport { schemeSet3 } from 'd3-scale-chromatic'\nimport { nivoCategoricalColors } from '../lib/colors'\n\n// motion\nexport const defaultAnimate = true\n\n// colors\nexport const defaultCategoricalColors = nivoCategoricalColors\nexport const defaultColorRange = scaleOrdinal(schemeSet3)\n\n// margin\nexport const defaultMargin = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n","import { useMemo } from 'react'\nimport { defaultMargin } from '../defaults'\n\nexport const useDimensions = (width, height, partialMargin = {}) =>\n    useMemo(() => {\n        const margin = {\n            ...defaultMargin,\n            ...partialMargin,\n        }\n\n        return {\n            margin,\n            innerWidth: width - margin.left - margin.right,\n            innerHeight: height - margin.top - margin.bottom,\n            outerWidth: width,\n            outerHeight: height,\n        }\n    }, [\n        width,\n        height,\n        partialMargin.top,\n        partialMargin.right,\n        partialMargin.bottom,\n        partialMargin.left,\n    ])\n","import { useRef, useState, useEffect } from 'react'\n\nexport const useMeasure = () => {\n    const measureRef = useRef(null)\n\n    const [bounds, setBounds] = useState({\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n    })\n\n    const [observer] = useState(() => {\n        // Check if ResizeObserver is defined in current env (could be browser, node.js, jsdom etc.).\n        if (typeof ResizeObserver === 'undefined') return null\n\n        return new ResizeObserver(([entry]) => setBounds(entry.contentRect))\n    })\n\n    useEffect(() => {\n        if (measureRef.current && observer !== null) {\n            observer.observe(measureRef.current)\n        }\n\n        return () => {\n            if (observer !== null) observer.disconnect()\n        }\n    }, [])\n\n    return [measureRef, bounds]\n}\n","import { useMemo } from 'react'\nimport { defaultTheme, extendDefaultTheme } from '../theming'\n\nexport const usePartialTheme = partialTheme =>\n    useMemo(() => extendDefaultTheme(defaultTheme, partialTheme), [partialTheme])\n","import { useMemo } from 'react'\nimport { format as d3Format } from 'd3-format'\nimport { timeFormat as d3TimeFormat } from 'd3-time-format'\n\nexport const getValueFormatter = format => {\n    // user defined function\n    if (typeof format === 'function') return format\n\n    if (typeof format === 'string') {\n        // time format specifier\n        if (format.indexOf('time:') === 0) {\n            return d3TimeFormat(format.slice('5'))\n        }\n\n        // standard format specifier\n        return d3Format(format)\n    }\n\n    // no formatting\n    return value => `${value}`\n}\n\nexport const useValueFormatter = format => useMemo(() => getValueFormatter(format), [format])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createContext, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { usePartialTheme } from '../hooks'\n\nexport const themeContext = createContext()\n\n// required to preserve equality\nconst defaultPartialTheme = {}\n\nexport const ThemeProvider = ({ theme: partialTheme = defaultPartialTheme, children }) => {\n    const theme = usePartialTheme(partialTheme)\n\n    return <themeContext.Provider value={theme}>{children}</themeContext.Provider>\n}\n\nThemeProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n    theme: PropTypes.object,\n}\n\nexport const useTheme = () => useContext(themeContext)\n","/**\n * Cleanup theme text style so that all properties\n * are valid for an SVG text element.\n *\n * @param {TextStyle} style\n */\nexport const sanitizeSvgTextStyle = style => {\n    const { outlineWidth, outlineColor, outlineOpacity, ...sanitized } = style\n\n    return sanitized\n}\n","import { cloneElement } from 'react'\nimport PropTypes from 'prop-types'\n\n// type ConditionalWrapperProps = {\n//     children: JSX.Element\n//     condition: boolean\n//     wrapper: (children: JSX.Element) => JSX.Element\n//   }\n\nexport const ConditionalWrapper = ({ children, condition, wrapper }) => {\n    if (!condition) return children\n\n    return cloneElement(wrapper, {}, children)\n}\n\nConditionalWrapper.propTypes = {\n    children: PropTypes.node.isRequired,\n    condition: PropTypes.bool.isRequired,\n    wrapper: PropTypes.element.isRequired,\n}\n","import { useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { TooltipProvider, Tooltip } from '@nivo/tooltip'\nimport { ThemeProvider } from '../theming'\nimport { MotionConfigProvider, motionPropTypes } from '../motion'\nimport { ConditionalWrapper } from './ConditionalWrapper'\n\nconst containerStyle = {\n    position: 'relative',\n}\n\nexport const Container = ({\n    children,\n    theme,\n    renderWrapper = true,\n    isInteractive = true,\n    animate,\n    motionConfig,\n}) => {\n    const container = useRef(null)\n\n    return (\n        <ThemeProvider theme={theme}>\n            <MotionConfigProvider animate={animate} config={motionConfig}>\n                <TooltipProvider container={container}>\n                    {/* we should not render the div element if using the HTTP API */}\n                    <ConditionalWrapper\n                        condition={renderWrapper}\n                        wrapper={<div style={containerStyle} ref={container} />}\n                    >\n                        {children}\n                        {isInteractive && <Tooltip />}\n                    </ConditionalWrapper>\n                </TooltipProvider>\n            </MotionConfigProvider>\n        </ThemeProvider>\n    )\n}\n\nContainer.propTypes = {\n    children: PropTypes.element.isRequired,\n    isInteractive: PropTypes.bool,\n    renderWrapper: PropTypes.bool,\n    theme: PropTypes.object,\n    animate: PropTypes.bool,\n    motionConfig: PropTypes.oneOfType([PropTypes.string, motionPropTypes.motionConfig]),\n}\n\nexport default Container\n","export default () => {}\n","import { useRef, useMemo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    TooltipActionsContext,\n    TooltipStateContext,\n    useTooltipHandlers,\n    Tooltip,\n} from '@nivo/tooltip'\nimport noop from '../lib/noop'\nimport { ThemeProvider } from '../theming'\nimport { MotionConfigProvider, motionPropTypes } from '../motion'\nimport { ConditionalWrapper } from './ConditionalWrapper'\n\nconst containerStyle = {\n    position: 'relative',\n}\n\n/**\n * This component should only be used when relying on render props,\n * passing `showTooltip`, `hideTooltip`, but you should use the regular\n * `Container` component.\n *\n * @deprecated\n */\nexport const LegacyContainer = ({\n    children,\n    theme,\n    isInteractive = true,\n    renderWrapper = true,\n    animate,\n    motionConfig,\n}) => {\n    const container = useRef(null)\n    const { actions: tooltipActions, state: tooltipState } = useTooltipHandlers(container)\n\n    const showTooltip = useCallback(\n        (content, event) => tooltipActions.showTooltipFromEvent(content, event),\n        [tooltipActions.showTooltipFromEvent]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            showTooltip: isInteractive ? showTooltip : noop,\n            hideTooltip: isInteractive ? tooltipActions.hideTooltip : noop,\n        }),\n        [tooltipActions.hideTooltip, isInteractive, showTooltip]\n    )\n\n    return (\n        <ThemeProvider theme={theme}>\n            <MotionConfigProvider animate={animate} config={motionConfig}>\n                <TooltipActionsContext.Provider value={tooltipActions}>\n                    <TooltipStateContext.Provider value={tooltipState}>\n                        {/* we should not render the div element if using the HTTP API */}\n                        <ConditionalWrapper\n                            condition={renderWrapper}\n                            wrapper={<div style={containerStyle} ref={container} />}\n                        >\n                            {children(handlers)}\n                            {isInteractive && <Tooltip />}\n                        </ConditionalWrapper>\n                    </TooltipStateContext.Provider>\n                </TooltipActionsContext.Provider>\n            </MotionConfigProvider>\n        </ThemeProvider>\n    )\n}\n\nLegacyContainer.propTypes = {\n    children: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool,\n    renderWrapper: PropTypes.bool,\n    theme: PropTypes.object.isRequired,\n    animate: PropTypes.bool.isRequired,\n    motionConfig: PropTypes.oneOfType([PropTypes.string, motionPropTypes.motionConfig]),\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { useMeasure } from '../hooks'\n\nconst ResponsiveWrapper = ({ children }) => {\n    const [measureRef, bounds] = useMeasure()\n    const shouldRender = bounds.width > 0 && bounds.height > 0\n\n    return (\n        <div ref={measureRef} style={{ width: '100%', height: '100%' }}>\n            {shouldRender && children({ width: bounds.width, height: bounds.height })}\n        </div>\n    )\n}\n\nResponsiveWrapper.propTypes = {\n    children: PropTypes.func.isRequired,\n}\n\nexport default ResponsiveWrapper\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const LinearGradient = ({ id, colors, ...rest }) => (\n    <linearGradient id={id} x1={0} x2={0} y1={0} y2={1} {...rest}>\n        {colors.map(({ offset, color, opacity }) => (\n            <stop\n                key={offset}\n                offset={`${offset}%`}\n                stopColor={color}\n                stopOpacity={opacity !== undefined ? opacity : 1}\n            />\n        ))}\n    </linearGradient>\n)\n\nLinearGradient.propTypes = {\n    id: PropTypes.string.isRequired,\n    colors: PropTypes.arrayOf(\n        PropTypes.shape({\n            offset: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n            opacity: PropTypes.number,\n        })\n    ).isRequired,\n    gradientTransform: PropTypes.string,\n}\n\nexport const linearGradientDef = (id, colors, options = {}) => ({\n    id,\n    type: 'linearGradient',\n    colors,\n    ...options,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { LinearGradient } from './LinearGradient'\n\nexport const gradientTypes = {\n    linearGradient: LinearGradient,\n}\n\nexport * from './LinearGradient'\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const PatternDotsDefaultProps = {\n    color: '#000000',\n    background: '#ffffff',\n    size: 4,\n    padding: 4,\n    stagger: false,\n}\n\nexport const PatternDots = memo(props => {\n    const {\n        id,\n        background = PatternDotsDefaultProps.background,\n        color = PatternDotsDefaultProps.color,\n        size = PatternDotsDefaultProps.size,\n        padding = PatternDotsDefaultProps.padding,\n        stagger = PatternDotsDefaultProps.stagger,\n    } = props\n\n    let fullSize = size + padding\n    const radius = size / 2\n    const halfPadding = padding / 2\n    if (stagger === true) {\n        fullSize = size * 2 + padding * 2\n    }\n\n    return (\n        <pattern id={id} width={fullSize} height={fullSize} patternUnits=\"userSpaceOnUse\">\n            <rect width={fullSize} height={fullSize} fill={background} />\n            <circle cx={halfPadding + radius} cy={halfPadding + radius} r={radius} fill={color} />\n            {stagger && (\n                <circle\n                    cx={padding * 1.5 + size + radius}\n                    cy={padding * 1.5 + size + radius}\n                    r={radius}\n                    fill={color}\n                />\n            )}\n        </pattern>\n    )\n})\n\nPatternDots.displayName = 'PatternDots'\nPatternDots.propTypes = {\n    id: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    background: PropTypes.string.isRequired,\n    size: PropTypes.number.isRequired,\n    padding: PropTypes.number.isRequired,\n    stagger: PropTypes.bool.isRequired,\n}\n\nexport const patternDotsDef = (id, options = {}) => ({\n    id,\n    type: 'patternDots',\n    ...options,\n})\n","export const TWO_PI = Math.PI * 2\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n\nexport const radiansToDegrees = radians => (180 * radians) / Math.PI\n\nexport const midAngle = arc => arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\nexport const positionFromAngle = (angle, distance) => ({\n    x: Math.cos(angle) * distance,\n    y: Math.sin(angle) * distance,\n})\n\n/**\n * Normalize given angle (degrees) in the 0~360 range.\n *\n * @param {number} angle\n *\n * @return {number}\n */\nexport const absoluteAngleDegrees = angle => {\n    let absAngle = angle % 360\n    if (absAngle < 0) {\n        absAngle += 360\n    }\n\n    return absAngle\n}\n\nexport const absoluteAngleRadians = angle => angle - TWO_PI * Math.floor((angle + Math.PI) / TWO_PI)\n\n/**\n * Ensure angle is always between 0~360.\n *\n * @param {number} rawAngle - in degrees\n *\n * @returns {number}\n */\nexport const normalizeAngle = rawAngle => {\n    if (rawAngle < 0) {\n        return 360 - (-rawAngle % 360)\n    }\n\n    return rawAngle % 360\n}\n\n/**\n * Ensure the absolute difference between start and end angles\n * is at most given length.\n *\n * @param startAngle - in degrees\n * @param endAngle   - in degrees\n * @param length     - in degrees\n *\n * @returns {[number, number]}\n */\nexport const clampArc = (startAngle, endAngle, length = 360) => {\n    let clampedEndAngle = endAngle\n    if (Math.abs(endAngle - startAngle) > length) {\n        clampedEndAngle = startAngle + (endAngle > startAngle ? length : -length)\n    }\n\n    return [startAngle, clampedEndAngle]\n}\n","export const textPropsByEngine = {\n    svg: {\n        align: {\n            left: 'start',\n            center: 'middle',\n            right: 'end',\n            start: 'start',\n            middle: 'middle',\n            end: 'end',\n        },\n        baseline: {\n            top: 'text-before-edge',\n            center: 'central',\n            bottom: 'alphabetic',\n        },\n    },\n    canvas: {\n        align: {\n            left: 'left',\n            center: 'center',\n            right: 'right',\n            start: 'left',\n            middle: 'center',\n            end: 'right',\n        },\n        baseline: {\n            top: 'top',\n            center: 'middle',\n            bottom: 'bottom',\n        },\n    },\n}\n","import { positionFromAngle, radiansToDegrees } from './utils'\nimport { textPropsByEngine } from '../bridge'\n\n/**\n * @param {number} radius\n * @param {number} angle          angle (radians)\n * @param {number} [rotation=0]   label rotation (degrees)\n * @param {string} [engine='svg'] one of: 'svg', 'canvas'\n * @return {{ x: number, y: number, rotate: number, align: string, baseline: string }}\n */\nexport const getPolarLabelProps = (radius, angle, rotation, engine = 'svg') => {\n    const textProps = textPropsByEngine[engine]\n\n    const { x, y } = positionFromAngle(angle - Math.PI / 2, radius)\n\n    let rotate = radiansToDegrees(angle)\n    let align = textProps.align.center\n    let baseline = textProps.baseline.bottom\n\n    if (rotation > 0) {\n        align = textProps.align.right\n        baseline = textProps.baseline.center\n    } else if (rotation < 0) {\n        align = textProps.align.left\n        baseline = textProps.baseline.center\n    }\n\n    // reverse labels after 180Â°\n    if (rotation !== 0 && rotate > 180) {\n        rotate -= 180\n        align = align === textProps.align.right ? textProps.align.left : textProps.align.right\n    }\n\n    rotate += rotation\n\n    return { x, y, rotate, align, baseline }\n}\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { degreesToRadians } from '../../../lib/polar'\n\nexport const PatternLinesDefaultProps = {\n    spacing: 5,\n    rotation: 0,\n    background: '#000000',\n    color: '#ffffff',\n    lineWidth: 2,\n}\n\nexport const PatternLines = memo(\n    ({\n        id,\n        spacing: _spacing = PatternLinesDefaultProps.spacing,\n        rotation: _rotation = PatternLinesDefaultProps.rotation,\n        background = PatternLinesDefaultProps.background,\n        color = PatternLinesDefaultProps.color,\n        lineWidth = PatternLinesDefaultProps.lineWidth,\n    }) => {\n        let rotation = Math.round(_rotation) % 360\n        const spacing = Math.abs(_spacing)\n\n        if (rotation > 180) rotation = rotation - 360\n        else if (rotation > 90) rotation = rotation - 180\n        else if (rotation < -180) rotation = rotation + 360\n        else if (rotation < -90) rotation = rotation + 180\n\n        let width = spacing\n        let height = spacing\n        let path\n\n        if (rotation === 0) {\n            path = `\n                M 0 0 L ${width} 0\n                M 0 ${height} L ${width} ${height}\n            `\n        } else if (rotation === 90) {\n            path = `\n                M 0 0 L 0 ${height}\n                M ${width} 0 L ${width} ${height}\n            `\n        } else {\n            width = Math.abs(spacing / Math.sin(degreesToRadians(rotation)))\n            height = spacing / Math.sin(degreesToRadians(90 - rotation))\n\n            if (rotation > 0) {\n                path = `\n                    M 0 ${-height} L ${width * 2} ${height}\n                    M ${-width} ${-height} L ${width} ${height}\n                    M ${-width} 0 L ${width} ${height * 2}\n                `\n            } else {\n                path = `\n                    M ${-width} ${height} L ${width} ${-height}\n                    M ${-width} ${height * 2} L ${width * 2} ${-height}\n                    M 0 ${height * 2} L ${width * 2} 0\n                `\n            }\n        }\n\n        return (\n            <pattern id={id} width={width} height={height} patternUnits=\"userSpaceOnUse\">\n                <rect\n                    width={width}\n                    height={height}\n                    fill={background}\n                    stroke=\"rgba(255, 0, 0, 0.1)\"\n                    strokeWidth={0}\n                />\n                <path d={path} strokeWidth={lineWidth} stroke={color} strokeLinecap=\"square\" />\n            </pattern>\n        )\n    }\n)\n\nPatternLines.displayName = 'PatternLines'\nPatternLines.propTypes = {\n    id: PropTypes.string.isRequired,\n    spacing: PropTypes.number.isRequired,\n    rotation: PropTypes.number.isRequired,\n    background: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n}\n\nexport const patternLinesDef = (id, options = {}) => ({\n    id,\n    type: 'patternLines',\n    ...options,\n})\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const PatternSquaresDefaultProps = {\n    color: '#000000',\n    background: '#ffffff',\n    size: 4,\n    padding: 4,\n    stagger: false,\n}\n\nexport const PatternSquares = memo(props => {\n    const {\n        id,\n        color = PatternSquaresDefaultProps.color,\n        background = PatternSquaresDefaultProps.background,\n        size = PatternSquaresDefaultProps.size,\n        padding = PatternSquaresDefaultProps.padding,\n        stagger = PatternSquaresDefaultProps.stagger,\n    } = props\n\n    let fullSize = size + padding\n    const halfPadding = padding / 2\n    if (stagger === true) {\n        fullSize = size * 2 + padding * 2\n    }\n\n    return (\n        <pattern id={id} width={fullSize} height={fullSize} patternUnits=\"userSpaceOnUse\">\n            <rect width={fullSize} height={fullSize} fill={background} />\n            <rect x={halfPadding} y={halfPadding} width={size} height={size} fill={color} />\n            {stagger && (\n                <rect\n                    x={padding * 1.5 + size}\n                    y={padding * 1.5 + size}\n                    width={size}\n                    height={size}\n                    fill={color}\n                />\n            )}\n        </pattern>\n    )\n})\n\nPatternSquares.displayName = 'PatternSquares'\nPatternSquares.propTypes = {\n    id: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    background: PropTypes.string.isRequired,\n    size: PropTypes.number.isRequired,\n    padding: PropTypes.number.isRequired,\n    stagger: PropTypes.bool.isRequired,\n}\n\nexport const patternSquaresDef = (id, options = {}) => ({\n    id,\n    type: 'patternSquares',\n    ...options,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { PatternDots } from './PatternDots'\nimport { PatternLines } from './PatternLines'\nimport { PatternSquares } from './PatternSquares'\n\nexport const patternTypes = {\n    patternDots: PatternDots,\n    patternLines: PatternLines,\n    patternSquares: PatternSquares,\n}\n\nexport * from './PatternDots'\nexport * from './PatternLines'\nexport * from './PatternSquares'\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { gradientTypes } from './gradients'\nimport { patternTypes } from './patterns'\n\nexport const defsMapping = {\n    ...gradientTypes,\n    ...patternTypes,\n}\n\nconst Defs = ({ defs: definitions }) => {\n    if (!definitions || definitions.length < 1) return null\n\n    return (\n        <defs aria-hidden={true}>\n            {definitions.map(({ type, ...def }) => {\n                if (defsMapping[type])\n                    return createElement(defsMapping[type], { key: def.id, ...def })\n\n                return null\n            })}\n        </defs>\n    )\n}\n\nDefs.propTypes = {\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.oneOf(Object.keys(defsMapping)).isRequired,\n            id: PropTypes.string.isRequired,\n        })\n    ),\n}\n\nexport default memo(Defs)\n","import PropTypes from 'prop-types'\nimport { Defs } from './defs'\nimport { useTheme } from '../theming'\n\nconst SvgWrapper = ({\n    width,\n    height,\n    margin,\n    defs,\n    children,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable,\n}) => {\n    const theme = useTheme()\n\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={width}\n            height={height}\n            role={role}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledBy}\n            aria-describedby={ariaDescribedBy}\n            focusable={isFocusable}\n            tabIndex={isFocusable ? 0 : undefined}\n        >\n            <Defs defs={defs} />\n            <rect width={width} height={height} fill={theme.background} />\n            <g transform={`translate(${margin.left},${margin.top})`}>{children}</g>\n        </svg>\n    )\n}\n\nSvgWrapper.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.shape({\n        top: PropTypes.number.isRequired,\n        left: PropTypes.number.isRequired,\n    }).isRequired,\n    defs: PropTypes.array,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n    role: PropTypes.string,\n    isFocusable: PropTypes.bool,\n    ariaLabel: PropTypes.string,\n    ariaLabelledBy: PropTypes.string,\n    ariaDescribedBy: PropTypes.string,\n}\n\nexport default SvgWrapper\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DotsItemSymbol = ({ size, color, borderWidth, borderColor }) => (\n    <circle\n        r={size / 2}\n        fill={color}\n        stroke={borderColor}\n        strokeWidth={borderWidth}\n        style={{ pointerEvents: 'none' }}\n    />\n)\n\nDotsItemSymbol.propTypes = {\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n}\n\nexport default memo(DotsItemSymbol)\n","import { createElement, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, sanitizeSvgTextStyle } from '../../theming'\nimport { useMotionConfig } from '../../motion'\nimport DotsItemSymbol from './DotsItemSymbol'\n\nconst DotsItem = ({\n    x,\n    y,\n    symbol = DotsItemSymbol,\n    size,\n    datum,\n    color,\n    borderWidth,\n    borderColor,\n    label,\n    labelTextAnchor = 'middle',\n    labelYOffset = -12,\n}) => {\n    const theme = useTheme()\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        transform: `translate(${x}, ${y})`,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} style={{ pointerEvents: 'none' }}>\n            {createElement(symbol, {\n                size,\n                color,\n                datum,\n                borderWidth,\n                borderColor,\n            })}\n            {label && (\n                <text\n                    textAnchor={labelTextAnchor}\n                    y={labelYOffset}\n                    style={sanitizeSvgTextStyle(theme.dots.text)}\n                >\n                    {label}\n                </text>\n            )}\n        </animated.g>\n    )\n}\n\nDotsItem.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    datum: PropTypes.object.isRequired,\n\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    symbol: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    labelTextAnchor: PropTypes.oneOf(['start', 'middle', 'end']),\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(DotsItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '../../../theming'\n\n/**\n *\n * @param {string} axis\n * @param {number} width\n * @param {number} height\n * @param {string} position\n * @param {number} offsetX\n * @param {number} offsetY\n * @param {string} orientation\n * @return {{ x: number, y: number, textAnchor: string }}\n */\nconst computeLabel = ({ axis, width, height, position, offsetX, offsetY, orientation }) => {\n    let x = 0\n    let y = 0\n    const rotation = orientation === 'vertical' ? -90 : 0\n    let textAnchor = 'start'\n\n    if (axis === 'x') {\n        switch (position) {\n            case 'top-left':\n                x = -offsetX\n                y = offsetY\n                textAnchor = 'end'\n                break\n            case 'top':\n                y = -offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'top-right':\n                x = offsetX\n                y = offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'right':\n                x = offsetX\n                y = height / 2\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n            case 'bottom-right':\n                x = offsetX\n                y = height - offsetY\n                textAnchor = 'start'\n                break\n            case 'bottom':\n                y = height + offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'bottom-left':\n                y = height - offsetY\n                x = -offsetX\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'left':\n                x = -offsetX\n                y = height / 2\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n        }\n    } else {\n        switch (position) {\n            case 'top-left':\n                x = offsetX\n                y = -offsetY\n                textAnchor = 'start'\n                break\n            case 'top':\n                x = width / 2\n                y = -offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'top-right':\n                x = width - offsetX\n                y = -offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'right':\n                x = width + offsetX\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n            case 'bottom-right':\n                x = width - offsetX\n                y = offsetY\n                textAnchor = 'end'\n                break\n            case 'bottom':\n                x = width / 2\n                y = offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'bottom-left':\n                x = offsetX\n                y = offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'left':\n                x = -offsetX\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n        }\n    }\n\n    return { x, y, rotation, textAnchor }\n}\n\nconst CartesianMarkersItem = ({\n    width,\n    height,\n    axis,\n    scale,\n    value,\n    lineStyle,\n    textStyle,\n    legend,\n    legendNode,\n    legendPosition = 'top-right',\n    legendOffsetX = 14,\n    legendOffsetY = 14,\n    legendOrientation = 'horizontal',\n}) => {\n    const theme = useTheme()\n\n    let x = 0\n    let x2 = 0\n    let y = 0\n    let y2 = 0\n\n    if (axis === 'y') {\n        y = scale(value)\n        x2 = width\n    } else {\n        x = scale(value)\n        y2 = height\n    }\n\n    if (legend && !legendNode) {\n        const legendProps = computeLabel({\n            axis,\n            width,\n            height,\n            position: legendPosition,\n            offsetX: legendOffsetX,\n            offsetY: legendOffsetY,\n            orientation: legendOrientation,\n        })\n        legendNode = (\n            <text\n                transform={`translate(${legendProps.x}, ${legendProps.y}) rotate(${legendProps.rotation})`}\n                textAnchor={legendProps.textAnchor}\n                dominantBaseline=\"central\"\n                style={textStyle}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <line\n                x1={0}\n                x2={x2}\n                y1={0}\n                y2={y2}\n                stroke={theme.markers.lineColor}\n                strokeWidth={theme.markers.lineStrokeWidth}\n                style={lineStyle}\n            />\n            {legendNode}\n        </g>\n    )\n}\n\nCartesianMarkersItem.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    lineStyle: PropTypes.object,\n    textStyle: PropTypes.object,\n\n    legend: PropTypes.string,\n    legendPosition: PropTypes.oneOf([\n        'top-left',\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n    ]),\n    legendOffsetX: PropTypes.number.isRequired,\n    legendOffsetY: PropTypes.number.isRequired,\n    legendOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n}\n\nexport default memo(CartesianMarkersItem)\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport CartesianMarkersItem from './CartesianMarkersItem'\n\nconst CartesianMarkers = ({ markers, width, height, xScale, yScale }) => {\n    if (!markers || markers.length === 0) return null\n\n    return markers.map((marker, i) => (\n        <CartesianMarkersItem\n            key={i}\n            {...marker}\n            width={width}\n            height={height}\n            scale={marker.axis === 'y' ? yScale : xScale}\n        />\n    ))\n}\n\nCartesianMarkers.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            lineStyle: PropTypes.object,\n            textStyle: PropTypes.object,\n        })\n    ),\n}\n\nexport default memo(CartesianMarkers)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Component } from 'react'\nimport { Container } from '../components/Container'\n\nexport const withContainer = WrappedComponent => {\n    // eslint-disable-next-line react/display-name\n    return class extends Component {\n        render() {\n            // eslint-disable-next-line react/prop-types\n            const { theme, renderWrapper, animate, motionConfig, ...childProps } = this.props\n\n            return (\n                <Container\n                    theme={theme}\n                    renderWrapper={renderWrapper}\n                    isInteractive={childProps.isInteractive}\n                    animate={animate}\n                    motionConfig={motionConfig}\n                >\n                    <WrappedComponent {...childProps} />\n                </Container>\n            )\n        }\n    }\n}\n","import isFunction from 'lodash/isFunction'\nimport get from 'lodash/get'\nimport { format } from 'd3-format'\nimport { useMemo } from 'react'\n\nexport const getLabelGenerator = (_label, labelFormat) => {\n    const getRawLabel = isFunction(_label) ? _label : d => get(d, _label)\n    let formatter\n    if (labelFormat) {\n        formatter = isFunction(labelFormat) ? labelFormat : format(labelFormat)\n    }\n\n    if (formatter) return d => formatter(getRawLabel(d))\n    return getRawLabel\n}\n\nexport const getPropertyAccessor = accessor =>\n    isFunction(accessor) ? accessor : d => get(d, accessor)\n\nexport const usePropertyAccessor = accessor =>\n    useMemo(() => getPropertyAccessor(accessor), [accessor])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const boxAlignments = [\n    'center',\n    'top-left',\n    'top',\n    'top-right',\n    'right',\n    'bottom-right',\n    'bottom',\n    'bottom-left',\n    'left',\n]\n\n/**\n * Align a box inside another containing box and returns x, y positions.\n *\n * @param {{ x: number, y: number, width: number, height: number }} box\n * @param {{ x: number, y: number, width: number, height: number }} container\n * @param {'center'|'top-left'|'top'|'top-right'|'right'|'bottom-right'|'bottom'|'bottom-left'|'left'} alignment\n * @return {[number, number]}\n */\nexport const alignBox = (box, container, alignment) => {\n    const deltaX = container.width - box.width\n    const deltaY = container.height - box.height\n\n    let x = 0\n    let y = 0\n    if (alignment === 'center') {\n        x = deltaX / 2\n        y = deltaY / 2\n    }\n    if (alignment === 'top') {\n        x = deltaX / 2\n    }\n    if (alignment === 'top-right') {\n        x = deltaX\n    }\n    if (alignment === 'right') {\n        x = deltaX\n        y = deltaY / 2\n    }\n    if (alignment === 'bottom-right') {\n        x = deltaX\n        y = deltaY\n    }\n    if (alignment === 'bottom') {\n        x = deltaX / 2\n        y = deltaY\n    }\n    if (alignment === 'bottom-left') {\n        y = deltaY\n    }\n    if (alignment === 'left') {\n        y = deltaY / 2\n    }\n\n    return [x, y]\n}\n","/**\n * Computes distance between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nexport const getDistance = (x1, y1, x2, y2) => {\n    let deltaX = x2 - x1\n    let deltaY = y2 - y1\n\n    deltaX *= deltaX\n    deltaY *= deltaY\n\n    return Math.sqrt(deltaX + deltaY)\n}\n\n/**\n * Computes angle (radians) between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nexport const getAngle = (x1, y1, x2, y2) => {\n    const angle = Math.atan2(y2 - y1, x2 - x1) - Math.PI / 2\n\n    return angle > 0 ? angle : Math.PI * 2 + angle\n}\n\n/**\n * Check if cursor is in given rectangle.\n *\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\nexport const isCursorInRect = (x, y, width, height, cursorX, cursorY) =>\n    x <= cursorX && cursorX <= x + width && y <= cursorY && cursorY <= y + height\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport * from './detect'\n\n/**\n * Get the position of the cursor (from `event`) relative\n * to its container (`el`).\n *\n * In a normal situation mouse enter/leave events\n * capture the position ok. But when the chart is inside a scaled\n * element with a CSS transform like: `transform: scale(2);`\n * tooltip are not positioned ok.\n *\n * Comparing original width `box.width` against the scaled width\n * give us the scaling factor to calculate the proper mouse position.\n */\nexport const getRelativeCursor = (el, event) => {\n    const { clientX, clientY } = 'touches' in event ? event.touches[0] : event\n\n    // Get the dimensions of the element, in case it has\n    // been scaled using a transform for example, we get\n    // the scaled dimensions, not the original ones.\n    const currentBox = el.getBoundingClientRect()\n\n    // Original dimensions, necessary to compute `scaleFactor`.\n    let originalBox\n    if (el.getBBox !== undefined) {\n        // For SVG elements.\n        originalBox = el.getBBox()\n    } else {\n        // Other elements.\n        originalBox = {\n            // These should be here, except when we are running in jsdom.\n            // https://github.com/jsdom/jsdom/issues/135\n            width: el.offsetWidth || 0,\n            height: el.offsetHeight || 0,\n        }\n    }\n\n    const scaleFactor =\n        originalBox.width === currentBox.width ? 1 : originalBox.width / currentBox.width\n    return [(clientX - currentBox.left) * scaleFactor, (clientY - currentBox.top) * scaleFactor]\n}\n","import isFunction from 'lodash/isFunction'\nimport isPlainObject from 'lodash/isPlainObject'\nimport pick from 'lodash/pick'\nimport isEqual from 'lodash/isEqual'\nimport get from 'lodash/get'\nimport set from 'lodash/set'\nimport { gradientTypes, patternTypes } from '../components/defs'\n\nconst gradientKeys = Object.keys(gradientTypes)\nconst patternKeys = Object.keys(patternTypes)\n\n/**\n * Check a node matches given def predicate.\n *\n * @param {string|Function|Object} predicate\n * @param {Object}                 node\n * @param {string}                 [dataKey] - Optional path to access node data\n * @returns {boolean}\n */\nexport const isMatchingDef = (predicate, node, dataKey) => {\n    if (predicate === '*') {\n        return true\n    } else if (isFunction(predicate)) {\n        return predicate(node)\n    } else if (isPlainObject(predicate)) {\n        const data = dataKey ? get(node, dataKey) : node\n        return isEqual(pick(data, Object.keys(predicate)), predicate)\n    }\n\n    return false\n}\n\n/**\n * Compute SVG defs.\n *\n * @param {Array.<Object>} defs               - Base SVG defs configs\n * @param {Array.<Object>} nodes              - Data nodes to apply defs on\n * @param {Array.<Object>} rules              - Rules used to conditionally apply defs on data nodes\n * @param {string}         [dataKey]          - Path to node data, used for rule object query based predicate\n * @param {string}         [colorKey='color'] - Node color path, required when inheritance is involved\n * @param {string}         [targetKey='fill'] - Node target property to apply def ID on\n * @returns {Array}\n */\nexport const bindDefs = (\n    defs,\n    nodes,\n    rules,\n    { dataKey, colorKey = 'color', targetKey = 'fill' } = {}\n) => {\n    let boundDefs = []\n\n    // will hold generated variation ids,\n    // to avoid generating multiple identical defs\n    const generatedIds = {}\n\n    if (defs.length && nodes.length) {\n        // first, add base defs\n        boundDefs = [...defs]\n\n        nodes.forEach(node => {\n            for (let i = 0; i < rules.length; i++) {\n                const { id, match } = rules[i]\n                if (isMatchingDef(match, node, dataKey)) {\n                    const def = defs.find(({ id: defId }) => defId === id)\n                    if (def) {\n                        if (patternKeys.includes(def.type)) {\n                            if (def.background === 'inherit' || def.color === 'inherit') {\n                                const nodeColor = get(node, colorKey)\n                                let background = def.background\n                                let color = def.color\n\n                                let inheritedId = id\n                                if (def.background === 'inherit') {\n                                    inheritedId = `${inheritedId}.bg.${nodeColor}`\n                                    background = nodeColor\n                                }\n                                if (def.color === 'inherit') {\n                                    inheritedId = `${inheritedId}.fg.${nodeColor}`\n                                    color = nodeColor\n                                }\n\n                                set(node, targetKey, `url(#${inheritedId})`)\n                                if (!generatedIds[inheritedId]) {\n                                    boundDefs.push({\n                                        ...def,\n                                        id: inheritedId,\n                                        background,\n                                        color,\n                                    })\n                                    generatedIds[inheritedId] = 1\n                                }\n                            } else {\n                                // do not generate new def as there's no inheritance involved\n                                set(node, targetKey, `url(#${id})`)\n                            }\n                        } else if (gradientKeys.includes(def.type)) {\n                            const allColors = def.colors.map(({ color }) => color)\n\n                            if (allColors.includes('inherit')) {\n                                const nodeColor = get(node, colorKey)\n\n                                let inheritedId = id\n                                const inheritedDef = {\n                                    ...def,\n                                    colors: def.colors.map((colorStop, i) => {\n                                        if (colorStop.color !== 'inherit') return colorStop\n\n                                        inheritedId = `${inheritedId}.${i}.${nodeColor}`\n\n                                        return {\n                                            ...colorStop,\n                                            color:\n                                                colorStop.color === 'inherit'\n                                                    ? nodeColor\n                                                    : colorStop.color,\n                                        }\n                                    }),\n                                }\n                                inheritedDef.id = inheritedId\n\n                                set(node, targetKey, `url(#${inheritedId})`)\n                                if (!generatedIds[inheritedId]) {\n                                    boundDefs.push(inheritedDef)\n                                    generatedIds[inheritedId] = 1\n                                }\n                            } else {\n                                // do not generate new def as there's no inheritance involved\n                                set(node, targetKey, `url(#${id})`)\n                            }\n                        }\n                    }\n\n                    // break loop on first match\n                    break\n                }\n            }\n        })\n    }\n\n    return boundDefs\n}\n"],"names":["defaultTheme","background","text","fontFamily","fontSize","fill","outlineWidth","outlineColor","outlineOpacity","axis","domain","line","stroke","strokeWidth","ticks","legend","grid","legends","hidden","symbol","opacity","title","labels","markers","lineColor","lineStrokeWidth","dots","tooltip","container","color","borderRadius","boxShadow","padding","basic","whiteSpace","display","alignItems","chip","marginRight","table","tableCell","tableCellValue","fontWeight","crosshair","strokeOpacity","strokeDasharray","annotations","link","outline","textPropsWithInheritance","inheritRootThemeText","partialStyle","rootStyle","_extends","extendDefaultTheme","customTheme","theme","merge","forEach","prop","set","get","motionConfigContext","createContext","motionDefaultProps","animate","config","MotionConfigProvider","props","children","_props$animate","_props$config","value","useMemo","reactSpringConfig","isString","presets","_jsx","Provider","motionPropTypes","PropTypes","bool","motionConfig","oneOfType","oneOf","Object","keys","shape","mass","number","tension","friction","clamp","precision","velocity","duration","easing","func","propTypes","node","isRequired","useMotionConfig","useContext","useAnimatedPath","path","_useMotionConfig","springConfig","previousPath","ref","useRef","useEffect","current","usePrevious","interpolator","interpolateString","useSpring","from","to","reset","immediate","quantizeColorScales","nivo","BrBG","last","schemeBrBG","PRGn","schemePRGn","PiYG","schemePiYG","PuOr","schemePuOr","RdBu","schemeRdBu","RdGy","schemeRdGy","RdYlBu","schemeRdYlBu","RdYlGn","schemeRdYlGn","spectral","schemeSpectral","blues","schemeBlues","greens","schemeGreens","greys","schemeGreys","oranges","schemeOranges","purples","schemePurples","reds","schemeReds","BuGn","schemeBuGn","BuPu","schemeBuPu","GnBu","schemeGnBu","OrRd","schemeOrRd","PuBuGn","schemePuBuGn","PuBu","schemePuBu","PuRd","schemePuRd","RdPu","schemeRdPu","YlGnBu","schemeYlGnBu","YlGn","schemeYlGn","YlOrBr","schemeYlOrBr","YlOrRd","schemeYlOrRd","quantizeColorScalesKeys","guessQuantizeColorScale","colors","isFunction","Error","scaleQuantize","range","isArray","join","colorSchemes","category10","schemeCategory10","accent","schemeAccent","dark2","schemeDark2","paired","schemePaired","pastel1","schemePastel1","pastel2","schemePastel2","set1","schemeSet1","set2","schemeSet2","set3","schemeSet3","brown_blueGreen","purpleRed_green","pink_yellowGreen","purple_orange","red_blue","red_grey","red_yellow_blue","red_yellow_green","blue_green","blue_purple","green_blue","orange_red","purple_blue_green","purple_blue","purple_red","red_purple","yellow_green_blue","yellow_green","yellow_orange_brown","yellow_orange_red","colorSchemeIds","colorInterpolators","interpolateBrBG","interpolatePRGn","interpolatePiYG","interpolatePuOr","interpolateRdBu","interpolateRdGy","interpolateRdYlBu","interpolateRdYlGn","interpolateSpectral","interpolateBlues","interpolateGreens","interpolateGreys","interpolateOranges","interpolatePurples","interpolateReds","viridis","interpolateViridis","inferno","interpolateInferno","magma","interpolateMagma","plasma","interpolatePlasma","warm","interpolateWarm","cool","interpolateCool","cubehelixDefault","interpolateCubehelixDefault","interpolateBuGn","interpolateBuPu","interpolateGnBu","interpolateOrRd","interpolatePuBuGn","interpolatePuBu","interpolatePuRd","interpolateRdPu","interpolateYlGnBu","interpolateYlGn","interpolateYlOrBr","interpolateYlOrRd","rainbow","interpolateRainbow","sinebow","interpolateSinebow","colorInterpolatorIds","nivoCategoricalColors","scaleOrdinal","getColorScale","dataScale","scheme","undefined","scale","type","indexOf","slice","scaleSequential","quantizeColorScalePropType","arrayOf","string","curvePropMapping","basis","curveBasis","basisClosed","curveBasisClosed","basisOpen","curveBasisOpen","bundle","curveBundle","cardinal","curveCardinal","cardinalClosed","curveCardinalClosed","cardinalOpen","curveCardinalOpen","catmullRom","curveCatmullRom","catmullRomClosed","curveCatmullRomClosed","catmullRomOpen","curveCatmullRomOpen","linear","curveLinear","linearClosed","curveLinearClosed","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","step","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","curvePropKeys","closedCurvePropKeys","filter","c","endsWith","areaCurvePropKeys","without","lineCurvePropKeys","curveFromProp","id","TypeError","stackOrderPropMapping","ascending","stackOrderAscending","descending","stackOrderDescending","insideOut","stackOrderInsideOut","none","stackOrderNone","reverse","stackOrderReverse","stackOrderPropKeys","stackOrderFromProp","stackOffsetPropMapping","expand","stackOffsetExpand","diverging","stackOffsetDiverging","stackOffsetNone","silhouette","stackOffsetSilhouette","wiggle","stackOffsetWiggle","stackOffsetPropKeys","stackOffsetFromProp","marginPropType","top","right","bottom","left","blendModes","blendModePropType","useCurveInterpolation","interpolation","defaultAnimate","defaultCategoricalColors","defaultColorRange","defaultMargin","useDimensions","width","height","partialMargin","margin","innerWidth","innerHeight","outerWidth","outerHeight","useMeasure","measureRef","_useState","useState","bounds","setBounds","observer","ResizeObserver","_ref","entry","contentRect","observe","disconnect","usePartialTheme","partialTheme","getValueFormatter","format","d3TimeFormat","d3Format","useValueFormatter","themeContext","defaultPartialTheme","ThemeProvider","_ref$theme","object","useTheme","sanitizeSvgTextStyle","style","_objectWithoutPropertiesLoose","_excluded","ConditionalWrapper","condition","wrapper","cloneElement","element","containerStyle","position","Container","_ref$renderWrapper","renderWrapper","_ref$isInteractive","isInteractive","TooltipProvider","_jsxs","Tooltip","noop","LegacyContainer","_useTooltipHandlers","useTooltipHandlers","tooltipActions","actions","tooltipState","state","showTooltip","useCallback","content","event","showTooltipFromEvent","handlers","hideTooltip","TooltipActionsContext","TooltipStateContext","ResponsiveWrapper","_useMeasure","shouldRender","LinearGradient","rest","x1","x2","y1","y2","map","_ref2","offset","stopColor","stopOpacity","gradientTransform","linearGradientDef","options","gradientTypes","linearGradient","PatternDotsDefaultProps","size","stagger","PatternDots","memo","_props$background","_props$color","_props$size","_props$padding","_props$stagger","fullSize","radius","halfPadding","patternUnits","cx","cy","r","displayName","patternDotsDef","TWO_PI","Math","PI","degreesToRadians","degrees","radiansToDegrees","radians","midAngle","arc","startAngle","endAngle","positionFromAngle","angle","distance","x","cos","y","sin","absoluteAngleDegrees","absAngle","absoluteAngleRadians","floor","normalizeAngle","rawAngle","clampArc","length","clampedEndAngle","abs","textPropsByEngine","svg","align","center","start","middle","end","baseline","canvas","getPolarLabelProps","rotation","engine","textProps","_positionFromAngle","rotate","PatternLinesDefaultProps","spacing","lineWidth","PatternLines","_ref$spacing","_spacing","_ref$rotation","_rotation","_ref$background","_ref$color","_ref$lineWidth","round","d","strokeLinecap","patternLinesDef","PatternSquaresDefaultProps","PatternSquares","patternSquaresDef","patternTypes","patternDots","patternLines","patternSquares","defsMapping","Defs","definitions","defs","def","createElement","key","SvgWrapper","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","isFocusable","xmlns","focusable","tabIndex","transform","array","DotsItemSymbol","borderWidth","borderColor","pointerEvents","DotsItem","_ref$symbol","datum","label","_ref$labelTextAnchor","labelTextAnchor","_ref$labelYOffset","labelYOffset","animatedProps","animated","g","textAnchor","CartesianMarkersItem","lineStyle","textStyle","legendNode","_ref2$legendPosition","legendPosition","_ref2$legendOffsetX","legendOffsetX","_ref2$legendOffsetY","legendOffsetY","_ref2$legendOrientati","legendOrientation","legendProps","offsetX","offsetY","orientation","computeLabel","dominantBaseline","instanceOf","Date","CartesianMarkers","xScale","yScale","marker","i","withContainer","WrappedComponent","_Component","_class","apply","this","arguments","prototype","render","_this$props","childProps","Component","getLabelGenerator","_label","labelFormat","formatter","getRawLabel","getPropertyAccessor","accessor","usePropertyAccessor","boxAlignments","alignBox","box","alignment","deltaX","deltaY","getDistance","sqrt","getAngle","atan2","isCursorInRect","cursorX","cursorY","getRelativeCursor","el","originalBox","touches","clientX","clientY","currentBox","getBoundingClientRect","scaleFactor","getBBox","offsetWidth","offsetHeight","gradientKeys","patternKeys","isMatchingDef","predicate","dataKey","isPlainObject","data","isEqual","pick","bindDefs","nodes","rules","_temp","_ref$colorKey","colorKey","_ref$targetKey","targetKey","boundDefs","generatedIds","concat","_loop","_rules$i","match","find","includes","nodeColor","inheritedId","push","_ref3","inheritedDef","colorStop"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]}},
    {"offset": {"line": 1642, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}