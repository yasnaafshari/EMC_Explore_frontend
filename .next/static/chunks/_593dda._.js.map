{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/components/sidebarItems.tsx"],"sourcesContent":["import {\n    List,\n    ListItem,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Divider,\n  } from \"@mui/material\";\n  import { Home, Search, BarChart, Timeline, Settings, Logout } from \"@mui/icons-material\";\n  import { useRouter } from \"next/navigation\";\n  \n  const SidebarItems = () => {\n    const router = useRouter();\n  \n    const menuItems = [\n      { text: \"Home\", icon: <Home />, path: \"/dashboard\" },\n      { text: \"Data Exploration\", icon: <Search />, path: \"/data-exploration\" },\n      { text: \"Visualization\", icon: <BarChart />, path: \"/visualization\" },\n      { text: \"Statistical Analysis\", icon: <Timeline />, path: \"/analysis\" },\n    ];\n  \n    return (\n      <div>\n        <List>\n          {menuItems.map(({ text, icon, path }) => (\n            <ListItem key={text} disablePadding>\n              <ListItemButton onClick={() => router.push(path)}>\n                <ListItemIcon>{icon}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          <ListItem disablePadding>\n            <ListItemButton onClick={() => router.push(\"/admin\")}>\n              <ListItemIcon><Settings /></ListItemIcon>\n              <ListItemText primary=\"Admin Panel\" />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton onClick={() => router.push(\"/logout\")}>\n              <ListItemIcon><Logout /></ListItemIcon>\n              <ListItemText primary=\"Logout\" />\n            </ListItemButton>\n          </ListItem>\n        </List>\n      </div>\n    );\n  };\n  \n  export default SidebarItems;\n  "],"names":[],"mappings":";;;;AASE;AADA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAQE;AAAA;;;;;;;;;;;AAGA,MAAM,eAAe;;IACnB,MAAM,SAAS,CAAA,GAAA,oQAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY;QAChB;YAAE,MAAM;YAAQ,oBAAM,4TAAC,+WAAA,CAAA,UAAI;;;;;YAAK,MAAM;QAAa;QACnD;YAAE,MAAM;YAAoB,oBAAM,4TAAC,iXAAA,CAAA,UAAM;;;;;YAAK,MAAM;QAAoB;QACxE;YAAE,MAAM;YAAiB,oBAAM,4TAAC,mXAAA,CAAA,UAAQ;;;;;YAAK,MAAM;QAAiB;QACpE;YAAE,MAAM;YAAwB,oBAAM,4TAAC,mXAAA,CAAA,UAAQ;;;;;YAAK,MAAM;QAAY;KACvE;IAED,qBACE,4TAAC;;0BACC,4TAAC,wYAAA,CAAA,OAAI;0BACF,UAAU,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,iBAClC,4TAAC,oZAAA,CAAA,WAAQ;wBAAY,cAAc;kCACjC,cAAA,4TAAC,saAAA,CAAA,iBAAc;4BAAC,SAAS,IAAM,OAAO,IAAI,CAAC;;8CACzC,4TAAC,gaAAA,CAAA,eAAY;8CAAE;;;;;;8CACf,4TAAC,gaAAA,CAAA,eAAY;oCAAC,SAAS;;;;;;;;;;;;uBAHZ;;;;;;;;;;0BAQnB,4TAAC,iZAAA,CAAA,UAAO;;;;;0BACR,4TAAC,wYAAA,CAAA,OAAI;;kCACH,4TAAC,oZAAA,CAAA,WAAQ;wBAAC,cAAc;kCACtB,cAAA,4TAAC,saAAA,CAAA,iBAAc;4BAAC,SAAS,IAAM,OAAO,IAAI,CAAC;;8CACzC,4TAAC,gaAAA,CAAA,eAAY;8CAAC,cAAA,4TAAC,mXAAA,CAAA,UAAQ;;;;;;;;;;8CACvB,4TAAC,gaAAA,CAAA,eAAY;oCAAC,SAAQ;;;;;;;;;;;;;;;;;kCAG1B,4TAAC,oZAAA,CAAA,WAAQ;wBAAC,cAAc;kCACtB,cAAA,4TAAC,saAAA,CAAA,iBAAc;4BAAC,SAAS,IAAM,OAAO,IAAI,CAAC;;8CACzC,4TAAC,gaAAA,CAAA,eAAY;8CAAC,cAAA,4TAAC,iXAAA,CAAA,UAAM;;;;;;;;;;8CACrB,4TAAC,gaAAA,CAAA,eAAY;oCAAC,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlC;GAvCM;;QACW,oQAAA,CAAA,YAAS;;;KADpB;uCAyCS"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/app/home/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  AppBar,\n  Box,\n  CssBaseline,\n  Drawer,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport { Menu } from \"@mui/icons-material\";\nimport SidebarItems from \"@/components/sidebarItems\";\n\nconst drawerWidth = 240;\n\nexport default function Home() {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setSidebarOpen((prev) => !prev);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n\n      {/* Top Bar (AppBar) */}\n      <AppBar position=\"fixed\" sx={{ zIndex: 1201, backgroundColor: \"#207B6E\" }}>\n        <Toolbar>\n          <IconButton color=\"inherit\" edge=\"start\" onClick={handleDrawerToggle} sx={{ mr: 2 }}>\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Home\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      {/* Sidebar (Either open or closed) */}\n      <Drawer\n        variant=\"temporary\"\n        open={sidebarOpen}\n        onClose={handleDrawerToggle}\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          position: \"relative\", // Make drawer relative to the AppBar\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n            marginTop: \"64px\", // Aligns the drawer just below the app bar\n          },\n        }}\n      >\n        <SidebarItems />\n      </Drawer>\n\n      {/* Main Content */}\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n          transition: \"margin-left 0.3s ease\", // Smooth transition when the sidebar toggles\n          marginLeft: sidebarOpen ? `${drawerWidth}px` : 0, // Adjust content based on sidebar state\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n        }}\n      >\n        <Toolbar />\n        <Typography variant=\"h4\" gutterBottom>\n          Welcome to the Home\n        </Typography>\n        <Typography variant=\"body1\">\n          This is where you&apos;ll see quick stats, datasets, and shortcuts.\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAWA;AAVA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;;;AAHA;;;;;AAeA,MAAM,cAAc;AAEL,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,qBAAqB;QACzB,eAAe,CAAC,OAAS,CAAC;IAC5B;IAEA,qBACE,4TAAC,qYAAA,CAAA,MAAG;QAAC,IAAI;YAAE,SAAS;QAAO;;0BACzB,4TAAC,6ZAAA,CAAA,cAAW;;;;;0BAGZ,4TAAC,8YAAA,CAAA,SAAM;gBAAC,UAAS;gBAAQ,IAAI;oBAAE,QAAQ;oBAAM,iBAAiB;gBAAU;0BACtE,cAAA,4TAAC,iZAAA,CAAA,UAAO;;sCACN,4TAAC,0ZAAA,CAAA,aAAU;4BAAC,OAAM;4BAAU,MAAK;4BAAQ,SAAS;4BAAoB,IAAI;gCAAE,IAAI;4BAAE;sCAChF,cAAA,4TAAC,+WAAA,CAAA,UAAI;;;;;;;;;;sCAEP,4TAAC,0ZAAA,CAAA,aAAU;4BAAC,SAAQ;4BAAK,MAAM;sCAAC;;;;;;;;;;;;;;;;;0BAOpC,4TAAC,8YAAA,CAAA,SAAM;gBACL,SAAQ;gBACR,MAAM;gBACN,SAAS;gBACT,IAAI;oBACF,OAAO;oBACP,YAAY;oBACZ,UAAU;oBACV,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE;wBACtB,OAAO;wBACP,WAAW;wBACX,WAAW;oBACb;gBACF;0BAEA,cAAA,4TAAC,8HAAA,CAAA,UAAY;;;;;;;;;;0BAIf,4TAAC,qYAAA,CAAA,MAAG;gBACF,WAAU;gBACV,IAAI;oBACF,UAAU;oBACV,GAAG;oBACH,YAAY;oBACZ,YAAY,cAAc,GAAG,YAAY,EAAE,CAAC,GAAG;oBAC/C,OAAO;wBAAE,IAAI,CAAC,YAAY,EAAE,YAAY,GAAG,CAAC;oBAAC;gBAC/C;;kCAEA,4TAAC,iZAAA,CAAA,UAAO;;;;;kCACR,4TAAC,0ZAAA,CAAA,aAAU;wBAAC,SAAQ;wBAAK,YAAY;kCAAC;;;;;;kCAGtC,4TAAC,0ZAAA,CAAA,aAAU;wBAAC,SAAQ;kCAAQ;;;;;;;;;;;;;;;;;;AAMpC;GA/DwB;KAAA"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}