{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/app/api/upload/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nexport async function POST(req: Request) {\n  const formData = await req.formData();\n  const file = formData.get(\"file\") as File;\n  if (!file) return NextResponse.json({ error: \"No file uploaded\" }, { status: 400 });\n\n  const uploadsDir = path.join(process.cwd(), \"public/uploads\");\n  \n  // Create uploads directory if it doesn't exist\n  if (!fs.existsSync(uploadsDir)) {\n    fs.mkdirSync(uploadsDir, { recursive: true });\n  }\n\n  const data = Buffer.from(await file.arrayBuffer());\n  const filePath = path.join(uploadsDir, file.name);\n\n  fs.writeFileSync(filePath, data);\n\n  return NextResponse.json({ filename: file.name });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,WAAW,MAAM,IAAI,QAAQ;IACnC,MAAM,OAAO,SAAS,GAAG,CAAC;IAC1B,IAAI,CAAC,MAAM,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAmB,GAAG;QAAE,QAAQ;IAAI;IAEjF,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAE5C,+CAA+C;IAC/C,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,aAAa;QAC9B,6FAAA,CAAA,UAAE,CAAC,SAAS,CAAC,YAAY;YAAE,WAAW;QAAK;IAC7C;IAEA,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW;IAC/C,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI;IAEhD,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU;IAE3B,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,UAAU,KAAK,IAAI;IAAC;AACjD"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}