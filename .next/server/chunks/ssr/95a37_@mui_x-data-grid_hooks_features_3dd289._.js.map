{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js"],"sourcesContent":["export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};"],"names":[],"mappings":";;;;AAAO,IAAI,2BAA2B,WAAW,GAAE,SAAU,wBAAwB;IACnF,wBAAwB,CAAC,OAAO,GAAG;IACnC,wBAAwB,CAAC,QAAQ,GAAG;IACpC,OAAO;AACT,EAAE,CAAC;AACI,MAAM,6BAA6B;IACxC,MAAM,EAAE;IACR,OAAO,EAAE;AACX","ignoreList":[0]}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js"],"sourcesContent":["import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const columnGroupHeadersHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight + columnGroupHeadersHeight * maxDepth + filterHeadersHeight;\n}"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columns/useGridColumns.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = size => {\n    if (prevInnerWidth.current !== size.width) {\n      prevInnerWidth.current = size.width;\n      const hasFlexColumns = gridVisibleColumnDefinitionsSelector(apiRef).some(col => col.flex && col.flex > 0);\n      if (!hasFlexColumns) {\n        return;\n      }\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAKO,MAAM,wBAAwB,CAAA;IACnC,MAAM,SAAS,qUAAM,MAAM,CAAC,CAAC;IAC7B,MAAM,qBAAqB,CAAC,OAAO;QACjC,OAAO,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC,YAAY;IAC7C;IACA,MAAM,eAAe;QACnB,OAAO,OAAO,GAAG,CAAC;IACpB;IAEA,+CAA+C;IAC/C,MAAM,mBAAmB,qUAAM,WAAW,CAAC,CAAC,EAC1C,KAAK,EACL,cAAc,EACd,aAAa,EACb,OAAO,EACR;QACC,IAAK,IAAI,IAAI,gBAAgB,IAAI,eAAe,KAAK,EAAG;YACtD,MAAM,YAAY,qBAAqB;gBACrC;gBACA,QAAQ,OAAO,OAAO;gBACtB,aAAa;gBACb;gBACA,qBAAqB;gBACrB,oBAAoB;gBACpB;YACF;YACA,IAAI,UAAU,OAAO,GAAG,GAAG;gBACzB,KAAK,UAAU,OAAO,GAAG;YAC3B;QACF;IACF,GAAG;QAAC;KAAO;IACX,MAAM,0BAA0B;QAC9B,6BAA6B;IAC/B;IACA,MAAM,2BAA2B;QAC/B;QACA;IACF;IACA,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,yBAAyB;IAClD,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,0BAA0B;IACnD,CAAA,GAAA,0YAAA,CAAA,yBAAsB,AAAD,EAAE,QAAQ,qBAAqB;AACtD;AACA,SAAS,qBAAqB,MAAM;IAClC,MAAM,EACJ,MAAM,EACN,MAAM,EACN,WAAW,EACX,KAAK,EACL,mBAAmB,EACnB,kBAAkB,EAClB,OAAO,EACR,GAAG;IACJ,MAAM,gBAAgB,QAAQ,MAAM;IACpC,MAAM,SAAS,OAAO,CAAC,YAAY;IACnC,MAAM,MAAM,OAAO,OAAO,CAAC,MAAM,CAAC;IAClC,MAAM,QAAQ,OAAO,OAAO,CAAC,WAAW,CAAC,KAAK;IAC9C,MAAM,UAAU,OAAO,OAAO,OAAO,KAAK,aAAa,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,UAAU,OAAO,OAAO;IAClH,IAAI,CAAC,WAAW,YAAY,GAAG;QAC7B,mBAAmB,QAAQ,OAAO,aAAa;YAC7C,kBAAkB;YAClB,WAAW;gBACT,SAAS;gBACT,OAAO,OAAO,aAAa;YAC7B;QACF;QACA,OAAO;YACL,SAAS;QACX;IACF;IACA,IAAI,QAAQ,OAAO,aAAa;IAChC,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,KAAK,EAAG;QACnC,MAAM,kBAAkB,cAAc;QACtC,qGAAqG;QACrG,IAAI,mBAAmB,uBAAuB,kBAAkB,oBAAoB;YAClF,MAAM,aAAa,OAAO,CAAC,gBAAgB;YAC3C,SAAS,WAAW,aAAa;YACjC,mBAAmB,QAAQ,OAAO,cAAc,GAAG;gBACjD,kBAAkB;gBAClB,uBAAuB,KAAK,GAAG,CAAC,cAAc,SAAS,gBAAgB;gBACvE,sBAAsB;YACxB;QACF;QACA,mBAAmB,QAAQ,OAAO,aAAa;YAC7C,kBAAkB;YAClB,WAAW;gBACT;gBACA;YACF;QACF;IACF;IACA,OAAO;QACL;IACF;AACF;AACA,SAAS,mBAAmB,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe;IACrE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QAClB,MAAM,CAAC,MAAM,GAAG,CAAC;IACnB;IACA,MAAM,CAAC,MAAM,CAAC,YAAY,GAAG;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js"],"sourcesContent":["import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  } else {\n    const rowNode = rowTree[id];\n    if (rowNode && isAutogeneratedRowNode(rowNode)) {\n      acc.push({\n        id,\n        model: {\n          [GRID_ID_AUTOGENERATED]: id\n        }\n      });\n    }\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortedRowIndexLookupSelector = createSelectorMemoized(gridSortedRowIdsSelector, sortedIds => {\n  return sortedIds.reduce((acc, id, index) => {\n    acc[id] = index;\n    return acc;\n  }, Object.create(null));\n});"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;;;AACA;;;CAGC,GACD,MAAM,2BAA2B,CAAA,QAAS,MAAM,OAAO;AAMhD,MAAM,2BAA2B,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,0BAA0B,CAAA,eAAgB,aAAa,UAAU;AAMjH,MAAM,+BAA+B,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,0BAA0B,+YAAA,CAAA,yBAAsB,EAAE,+YAAA,CAAA,sBAAmB,EAAE,CAAC,WAAW,cAAc,UAAY,UAAU,MAAM,CAAC,CAAC,KAAK;QACrM,MAAM,QAAQ,YAAY,CAAC,GAAG;QAC9B,IAAI,OAAO;YACT,IAAI,IAAI,CAAC;gBACP;gBACA;YACF;QACF,OAAO;YACL,MAAM,UAAU,OAAO,CAAC,GAAG;YAC3B,IAAI,WAAW,CAAA,GAAA,4YAAA,CAAA,yBAAsB,AAAD,EAAE,UAAU;gBAC9C,IAAI,IAAI,CAAC;oBACP;oBACA,OAAO;wBACL,CAAC,4YAAA,CAAA,wBAAqB,CAAC,EAAE;oBAC3B;gBACF;YACF;QACF;QACA,OAAO;IACT,GAAG,EAAE;AAME,MAAM,wBAAwB,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,0BAA0B,CAAA,UAAW,QAAQ,SAAS;AAKnG,MAAM,+BAA+B,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,uBAAuB,CAAA;IACxF,MAAM,SAAS,UAAU,MAAM,CAAC,CAAC,KAAK,UAAU;QAC9C,GAAG,CAAC,SAAS,KAAK,CAAC,GAAG;YACpB,eAAe,SAAS,IAAI;YAC5B,WAAW,UAAU,MAAM,GAAG,IAAI,QAAQ,IAAI;QAChD;QACA,OAAO;IACT,GAAG,CAAC;IACJ,OAAO;AACT;AAMO,MAAM,mCAAmC,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,0BAA0B,CAAA;IAC/F,OAAO,UAAU,MAAM,CAAC,CAAC,KAAK,IAAI;QAChC,GAAG,CAAC,GAAG,GAAG;QACV,OAAO;IACT,GAAG,OAAO,MAAM,CAAC;AACnB","ignoreList":[0]}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {RefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {RefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1104, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/sorting/useGridSorting.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/filter/gridFilterSelector.js"],"sourcesContent":["import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, gridRowMaximumTreeDepthSelector, gridFilterModelSelector, gridQuickFilterValuesSelector, (visibleRowsLookup, sortedRows, maxDepth, filterModel, quickFilterValues) => {\n  if (maxDepth < 2 && !filterModel.items.length && !quickFilterValues?.length) {\n    return sortedRows;\n  }\n  return sortedRows.filter(row => visibleRowsLookup[row.id] !== false);\n});\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1531, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/filter/gridFilterState.js"],"sourcesContent":["import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const defaultGridFilterLookup = {\n  filteredRowsLookup: {},\n  filteredChildrenCountLookup: {},\n  filteredDescendantCountLookup: {}\n};\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,0BAA0B;IACrC,oBAAoB,CAAC;IACrB,6BAA6B,CAAC;IAC9B,+BAA+B,CAAC;AAClC;AACO,MAAM,4BAA4B,IAAM,CAAC;QAC9C,OAAO,EAAE;QACT,eAAe,0XAAA,CAAA,oBAAiB,CAAC,GAAG;QACpC,mBAAmB,EAAE;QACrB,0BAA0B,0XAAA,CAAA,oBAAiB,CAAC,GAAG;IACjD,CAAC,GAED;;;CAGC,IAED;;;;CAIC","ignoreList":[0]}},
    {"offset": {"line": 1555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1561, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/filter/gridFilterUtils.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {RefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {RefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {RefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1862, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1868, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/filter/useGridFilter.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { defaultGridFilterLookup, getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: _extends({\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef)\n    }, defaultGridFilterLookup),\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters || !params.filterModel.items.length && !params.filterModel.quickFilterValues?.length) {\n      return defaultGridFilterLookup;\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2319, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js"],"sourcesContent":["import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);"],"names":[],"mappings":";;;;;;;AAAA;;AAKO,MAAM,6BAA6B,CAAA,QAAS,MAAM,cAAc;AAChE,MAAM,yCAAyC,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,4BAA4B,CAAA,iBAAkB,gBAAgB,0BAA0B,CAAC;AAC/J,MAAM,iCAAiC,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,4BAA4B,CAAA,iBAAkB,gBAAgB,UAAU,CAAC;AACvI,MAAM,0CAA0C,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,4BAA4B,CAAA,iBAAkB,gBAAgB,mBAAmB,EAAE;AAC1J,MAAM,yCAAyC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,4BAA4B,CAAA,iBAAkB,gBAAgB,YAAY","ignoreList":[0]}},
    {"offset": {"line": 2333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js"],"sourcesContent":["import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;AACA,kFAAkF;AAClF,MAAM,qCAAqC,CAAC,iBAAiB,SAAS;IACpE,IAAI,CAAA,GAAA,8XAAA,CAAA,SAAM,AAAD,EAAE,kBAAkB;QAC3B,IAAI,gCAAgC,CAAC,gBAAgB,KAAK,CAAC,KAAK,WAAW;YACzE,MAAM,IAAI,MAAM;gBAAC,CAAC,oDAAoD,CAAC;gBAAE,CAAC,aAAa,EAAE,gBAAgB,KAAK,CAAC,wCAAwC,CAAC;gBAAE,CAAC,EAAE,EAAE,gCAAgC,CAAC,gBAAgB,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ;gBAAE,CAAC,EAAE,EAAE,QAAQ,IAAI,CAAC,QAAQ;aAAC,CAAC,IAAI,CAAC;QACzQ;QACA,gCAAgC,CAAC,gBAAgB,KAAK,CAAC,GAAG;QAC1D;IACF;IACA,MAAM,EACJ,OAAO,EACP,QAAQ,EACT,GAAG;IACJ,SAAS,OAAO,CAAC,CAAA;QACf,mCAAmC,OAAO;eAAI;YAAS;SAAQ,EAAE;IACnE;AACF;AAQO,MAAM,4BAA4B,CAAA;IACvC,IAAI,CAAC,qBAAqB;QACxB,OAAO,CAAC;IACV;IACA,MAAM,mBAAmB,CAAC;IAC1B,oBAAoB,OAAO,CAAC,CAAA;QAC1B,mCAAmC,iBAAiB,EAAE,EAAE;IAC1D;IACA,OAAO;AACT;AACO,MAAM,iCAAiC,CAAC,gBAAgB,wBAAwB;IACrF,MAAM,aAAa,CAAA,QAAS,sBAAsB,CAAC,MAAM,IAAI,EAAE;IAC/D,MAAM,0BAA0B,EAAE;IAClC,MAAM,WAAW,KAAK,GAAG,IAAI,eAAe,GAAG,CAAC,CAAA,QAAS,WAAW,OAAO,MAAM;IACjF,MAAM,kBAAkB,CAAC,QAAQ,QAAQ,QAAU,CAAA,GAAA,gXAAA,CAAA,cAAW,AAAD,EAAE,WAAW,QAAQ,KAAK,CAAC,GAAG,QAAQ,IAAI,WAAW,QAAQ,KAAK,CAAC,GAAG,QAAQ;IAC3I,MAAM,0BAA0B,CAAC,QAAQ;QACvC,IAAI,cAAc,QAAQ,aAAa,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,SAAS;YACnG,OAAO;QACT;QACA,IAAI,cAAc,SAAS,CAAC,aAAa,KAAK,CAAC,QAAQ,CAAC,WAAW,aAAa,KAAK,CAAC,QAAQ,CAAC,SAAS;YACtG,OAAO;QACT;QACA,OAAO;IACT;IACA,IAAK,IAAI,QAAQ,GAAG,QAAQ,UAAU,SAAS,EAAG;QAChD,MAAM,iBAAiB,eAAe,MAAM,CAAC,CAAC,WAAW;YACvD,MAAM,UAAU,WAAW,SAAS,CAAC,MAAM,IAAI;YAC/C,IAAI,UAAU,MAAM,KAAK,GAAG;gBAC1B,OAAO;oBAAC;wBACN,cAAc;4BAAC;yBAAS;wBACxB;oBACF;iBAAE;YACJ;YACA,MAAM,YAAY,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE;YACjD,MAAM,YAAY,UAAU,YAAY,CAAC,UAAU,YAAY,CAAC,MAAM,GAAG,EAAE;YAC3E,MAAM,cAAc,UAAU,OAAO;YACrC,IAAI,gBAAgB,WAAW,CAAC,gBAAgB,WAAW,UAAU,UACrE,mDAAmD;YACnD,wBAAwB,WAAW,WAAW;gBAC5C,mBAAmB;gBACnB,OAAO;uBAAI;oBAAW;wBACpB,cAAc;4BAAC;yBAAS;wBACxB;oBACF;iBAAE;YACJ;YAEA,gCAAgC;YAChC,OAAO;mBAAI,UAAU,KAAK,CAAC,GAAG,UAAU,MAAM,GAAG;gBAAI;oBACnD,cAAc;2BAAI,UAAU,YAAY;wBAAE;qBAAS;oBACnD;gBACF;aAAE;QACJ,GAAG,EAAE;QACL,wBAAwB,IAAI,CAAC;IAC/B;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 2438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2444, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2597, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js"],"sourcesContent":["import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACO,MAAM,gCAAgC,CAAA,QAAS,MAAM,YAAY;AACjE,MAAM,gCAAgC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,+BAA+B,CAAA,YAAa,UAAU,MAAM;AACjH,MAAM,2BAA2B,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,+BAA+B,+YAAA,CAAA,yBAAsB,EAAE,CAAC,cAAc,aAAe,IAAI,IAAI,aAAa,GAAG,CAAC,CAAA,KAAM;YAAC;YAAI,UAAU,CAAC,GAAG;SAAC;AAChM,MAAM,4BAA4B,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,+BAA+B,CAAA,YAAa,UAAU,MAAM,CAAC,CAAC,QAAQ;QACpI,MAAM,CAAC,MAAM,GAAG;QAChB,OAAO;IACT,GAAG,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2623, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/rowSelection/utils.js"],"sourcesContent":["import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId] !== false);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2804, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AAFA;;;;;;;AAGA,MAAM,oBAAoB,CAAA;IACxB,MAAM,EACJ,OAAO,EACR,GAAG;IACJ,OAAO,qUAAM,OAAO,CAAC;QACnB,MAAM,QAAQ;YACZ,cAAc;gBAAC;aAAe;YAC9B,sBAAsB;gBAAC;aAAuB;QAChD;QACA,OAAO,CAAA,GAAA,8RAAA,CAAA,UAAc,AAAD,EAAE,OAAO,0XAAA,CAAA,0BAAuB,EAAE;IACxD,GAAG;QAAC;KAAQ;AACd;AACO,MAAM,mCAAmC,CAAC,QAAQ;IACvD,MAAM,aAAa;QACjB,SAAS,MAAM,OAAO;IACxB;IACA,MAAM,UAAU,kBAAkB;IAClC,MAAM,wBAAwB,qUAAM,WAAW,CAAC,CAAA;QAC9C,MAAM,kBAAkB,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,uYAAA,CAAA,kCAA+B,EAAE;YACpE,eAAe,QAAQ,YAAY;YACnC,iBAAiB,QAAQ,oBAAoB;YAC7C,YAAY,OAAO,OAAO,CAAC,aAAa,CAAC;QAC3C;QACA,MAAM,4BAA4B,MAAM,iBAAiB;QACzD,MAAM,sBAAsB,aAAa,MAAM,CAAC,uYAAA,CAAA,gCAA6B,CAAC,IAAI;QAClF,IAAI,6BAA6B,CAAC,qBAAqB;YACrD,aAAa,MAAM,CAAC,uYAAA,CAAA,gCAA6B,CAAC,GAAG;YACrD,aAAa,aAAa,GAAG;gBAAC,uYAAA,CAAA,gCAA6B;mBAAK,aAAa,aAAa;aAAC;QAC7F,OAAO,IAAI,CAAC,6BAA6B,qBAAqB;YAC5D,OAAO,aAAa,MAAM,CAAC,uYAAA,CAAA,gCAA6B,CAAC;YACzD,aAAa,aAAa,GAAG,aAAa,aAAa,CAAC,MAAM,CAAC,CAAA,QAAS,UAAU,uYAAA,CAAA,gCAA6B;QACjH,OAAO,IAAI,6BAA6B,qBAAqB;YAC3D,aAAa,MAAM,CAAC,uYAAA,CAAA,gCAA6B,CAAC,GAAG,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,iBAAiB,aAAa,MAAM,CAAC,uYAAA,CAAA,gCAA6B,CAAC;QACvI;QACA,OAAO;IACT,GAAG;QAAC;QAAQ;QAAS,MAAM,iBAAiB;KAAC;IAC7C,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,kBAAkB;AACzD","ignoreList":[0]}},
    {"offset": {"line": 2868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2874, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowsLookupSelector, gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = new Set(selectableIds);\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.add(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = new Set();\n      }\n      const currentLookup = selectedIdsLookupSelector(apiRef);\n      if (newSelection.size === Object.keys(currentLookup).length && Array.from(newSelection).every(id => currentLookup[id] === id)) {\n        return;\n      }\n    } else {\n      newSelection = new Set(Object.values(selectedIdsLookupSelector(apiRef)));\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          newSelection.add(id);\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n    }\n    const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(Array.from(newSelection));\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    const isNonExistent = id => {\n      if (props.filterMode === 'server') {\n        return !rowsLookup[id];\n      }\n      return !rowsLookup[id] || filteredRowsLookup[id] === false;\n    };\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (isNonExistent(id)) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n\n    // For nested data, on row tree updation (filtering, adding rows, etc.) when the selection is\n    // not empty, we need to re-run scanning of the tree to propagate the selection changes\n    // Example: A parent whose de-selected children are filtered out should now be selected\n    const shouldReapplyPropagation = isNestedData && props.rowSelectionPropagation?.parents && Object.keys(selectionLookup).length > 0;\n    if (hasChanged || shouldReapplyPropagation && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (shouldReapplyPropagation) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, props.filterMode, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const visibleRows = getVisibleRows(apiRef);\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3461, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js"],"sourcesContent":["import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,yBAAyB,CAAA,QAAS,MAAM,KAAK;AACnD,MAAM,wBAAwB,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,wBAAwB,CAAA,aAAc,WAAW,IAAI;AAClG,MAAM,gCAAgC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,wBAAwB,CAAA,aAAc,WAAW,YAAY;AAClH,MAAM,sCAAsC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,wBAAwB,CAAA,aAAc,WAAW,kBAAkB;AAC9H,MAAM,qCAAqC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,wBAAwB,CAAA,aAAc,WAAW,iBAAiB;AAC5H,MAAM,4BAA4B,CAAA,QAAS,MAAM,QAAQ;AACzD,MAAM,2BAA2B,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,2BAA2B,CAAA,QAAS,MAAM,IAAI;AAC9F,MAAM,mCAAmC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,2BAA2B,CAAA,QAAS,MAAM,YAAY;AAC9G,MAAM,yCAAyC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,2BAA2B,CAAA,QAAS,MAAM,kBAAkB;AAC1H,MAAM,wCAAwC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,2BAA2B,CAAA,QAAS,MAAM,iBAAiB","ignoreList":[0]}},
    {"offset": {"line": 3485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3491, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/focus/useGridFocus.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = cell.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const rowEl = apiRef.current.getRowElement(lastFocusedRowId);\n        const lastFocusedRowIndex = rowEl?.dataset.rowindex ? Number(rowEl?.dataset.rowindex) : 0;\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow?.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3953, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js"],"sourcesContent":["import { createSelectorV8 } from \"../../../utils/createSelector.js\";\nexport const gridPreferencePanelStateSelector = state => state.preferencePanel;\nexport const gridPreferencePanelSelectorWithLabel = createSelectorV8(gridPreferencePanelStateSelector, (panel, labelId) => {\n  if (panel.open && panel.labelId === labelId) {\n    return true;\n  }\n  return false;\n});"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mCAAmC,CAAA,QAAS,MAAM,eAAe;AACvE,MAAM,uCAAuC,CAAA,GAAA,yXAAA,CAAA,mBAAgB,AAAD,EAAE,kCAAkC,CAAC,OAAO;IAC7G,IAAI,MAAM,IAAI,IAAI,MAAM,OAAO,KAAK,SAAS;QAC3C,OAAO;IACT;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 3966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3972, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js"],"sourcesContent":["var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };"],"names":[],"mappings":";;;AAAA,IAAI,4BAA4B,WAAW,GAAE,SAAU,yBAAyB;IAC9E,yBAAyB,CAAC,UAAU,GAAG;IACvC,yBAAyB,CAAC,UAAU,GAAG;IACvC,OAAO;AACT,EAAE,6BAA6B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3987, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (!state.preferencePanel.open) {\n        return state;\n      }\n      logger.debug('Hiding Preferences Panel');\n      const preferencePanelState = gridPreferencePanelStateSelector(state);\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n      return _extends({}, state, {\n        preferencePanel: {\n          open: false\n        }\n      });\n    });\n  }, [apiRef, logger]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n  }, [logger, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n};"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AAEA;AAHA;AAEA;;;;;;;AAEO,MAAM,kCAAkC,CAAC,OAAO,QAAU,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;QACnF,iBAAiB,MAAM,YAAY,EAAE,mBAAmB;YACtD,MAAM;QACR;IACF;AAKO,MAAM,0BAA0B,CAAC,QAAQ;IAC9C,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;IAErC;;GAEC,GACD,MAAM,kBAAkB,qUAAM,WAAW,CAAC;QACxC,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA;YACtB,IAAI,CAAC,MAAM,eAAe,CAAC,IAAI,EAAE;gBAC/B,OAAO;YACT;YACA,OAAO,KAAK,CAAC;YACb,MAAM,uBAAuB,CAAA,GAAA,saAAA,CAAA,mCAAgC,AAAD,EAAE;YAC9D,OAAO,OAAO,CAAC,YAAY,CAAC,wBAAwB;gBAClD,kBAAkB,qBAAqB,gBAAgB;YACzD;YACA,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACzB,iBAAiB;oBACf,MAAM;gBACR;YACF;QACF;IACF,GAAG;QAAC;QAAQ;KAAO;IACnB,MAAM,kBAAkB,qUAAM,WAAW,CAAC,CAAC,UAAU,SAAS;QAC5D,OAAO,KAAK,CAAC;QACb,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACnD,iBAAiB,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,eAAe,EAAE;oBACnD,MAAM;oBACN,kBAAkB;oBAClB;oBACA;gBACF;YACF;QACA,OAAO,OAAO,CAAC,YAAY,CAAC,uBAAuB;YACjD,kBAAkB;QACpB;IACF,GAAG;QAAC;QAAQ;KAAO;IACnB,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ;QACvB;QACA;IACF,GAAG;IAEH;;GAEC,GACD,MAAM,2BAA2B,qUAAM,WAAW,CAAC,CAAC,WAAW;QAC7D,MAAM,0BAA0B,CAAA,GAAA,saAAA,CAAA,mCAAgC,AAAD,EAAE,OAAO,OAAO,CAAC,KAAK;QACrF,MAAM,8BACN,yEAAyE;QACzE,CAAC,QAAQ,qBAAqB,IAC9B,6CAA6C;QAC7C,MAAM,YAAY,EAAE,mBAAmB,QACvC,uCAAuC;QACvC,wBAAwB,IAAI;QAC5B,IAAI,CAAC,6BAA6B;YAChC,OAAO;QACT;QACA,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,WAAW;YAC7B,iBAAiB;QACnB;IACF,GAAG;QAAC;QAAQ,MAAM,YAAY,EAAE;KAAgB;IAChD,MAAM,4BAA4B,qUAAM,WAAW,CAAC,CAAC,QAAQ;QAC3D,MAAM,kBAAkB,QAAQ,cAAc,CAAC,eAAe;QAC9D,IAAI,mBAAmB,MAAM;YAC3B,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;oBACnD;gBACF;QACF;QACA,OAAO;IACT,GAAG;QAAC;KAAO;IACX,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,eAAe;IACpD,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,gBAAgB;AACvD","ignoreList":[0]}},
    {"offset": {"line": 4085, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4091, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AAEA;AADA;;;AAFA,MAAM,YAAY;IAAC;CAAe;;;;AAIlC,MAAM,yBAAyB,CAAA;IAC7B,MAAM,SAAS,CAAA,GAAA,4YAAA,CAAA,2BAAwB,AAAD;IACtC,MAAM,YAAY,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD;IACjC,MAAM,EACJ,YAAY,EACZ,gBAAgB,EAChB,QAAQ,CAAC,CAAC,EACV,YAAY,CAAC,CAAC,EACd,QAAQ,EACR,MAAM,EACN,cAAc,IAAI,EACnB,GAAG;IACJ,MAAM,sBAAsB,qUAAM,OAAO,CAAC,IAAM,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,cAAc,QAAQ;QAAC;QAAc;KAAM;IACxG,MAAM,qBAAqB,qUAAM,OAAO,CAAC;QACvC,IAAI,CAAC,aAAa,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK,GAAG;YACrD,OAAO;QACT;QACA,MAAM,cAAc,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG;QACjC,OAAO,OAAO,CAAC,kBAAkB,OAAO,CAAC,CAAC,CAAC,KAAK,iBAAiB;YAC/D,WAAW,CAAC,IAAI,GAAG,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,kBAAkB,SAAS,CAAC,IAAI,IAAI,CAAC;QACvE;QACA,OAAO;IACT,GAAG;QAAC;QAAkB;KAAU;IAChC,MAAM,eAAe,OAAO,OAAO,CAAC,4BAA4B,CAAC,cAAc,EAAE,EAAE,MAAM,MAAM;IAC/F,MAAM,YAAY,qUAAM,OAAO,CAAC;QAC9B,MAAM,uBAAuB,OAAO,IAAI,CAAC;QACzC,OAAO,OAAO,IAAI,CAAC,OAAO,MAAM,CAAC,CAAA,MAAO,CAAC,qBAAqB,QAAQ,CAAC;IACzE,GAAG;QAAC;QAAO;KAAa;IACxB,OAAO,qUAAM,OAAO,CAAC;QACnB,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,IAAI;eAAI;eAAiB;SAAU;QACtE,MAAM,gBAAgB,YAAY,MAAM,CAAC,CAAA,MAAO,mBAAmB,CAAC,IAAI,IAAI;QAC5E,MAAM,SAAS,cAAc,IAAI,CAAC,CAAC,GAAG;YACpC,MAAM,gBAAgB,kBAAkB,CAAC,EAAE;YAC3C,MAAM,iBAAiB,kBAAkB,CAAC,EAAE;YAC5C,MAAM,mBAAmB,OAAO,QAAQ,CAAC,eAAe,gBAAgB,cAAc,YAAY,GAAG;YACrG,MAAM,oBAAoB,OAAO,QAAQ,CAAC,gBAAgB,gBAAgB,eAAe,YAAY,GAAG;YACxG,OAAO,mBAAmB;QAC5B;QACA,OAAO,OAAO,MAAM,CAAC,CAAC,KAAK,KAAK;YAC9B,IAAI,YAAY;gBACd;gBACA,SAAS;YACX;YACA,MAAM,0BAA0B,kBAAkB,CAAC,IAAI;YACvD,IAAI,yBAAyB;gBAC3B,MAAM,cAAc,CAAA,GAAA,oPAAA,CAAA,UAA6B,AAAD,EAAE,yBAAyB;gBAC3E,YAAY,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,WAAW;YACtC;YACA,OAAO,eAAe,UAAU,OAAO,MAAM,GAAG,IAAI;mBAAI;gBAAK;oBAAC,mBAAmB,CAAC,IAAI;oBAAE;iBAAU;gBAAE;oBAAC,UAAU,KAAK,CAAC,WAAW;oBAAE,CAAC;iBAAE;aAAC,GAAG;mBAAI;gBAAK;oBAAC,mBAAmB,CAAC,IAAI;oBAAE;iBAAU;aAAC;QAC1L,GAAG,EAAE;IACP,GAAG;QAAC;QAAa;QAAQ;QAAc;QAAU;QAAqB;QAAoB;QAAW,UAAU,KAAK,CAAC,WAAW;KAAC;AACnI","ignoreList":[0]}},
    {"offset": {"line": 4189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4195, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js"],"sourcesContent":["export const gridColumnMenuSelector = state => state.columnMenu;"],"names":[],"mappings":";;;AAAO,MAAM,yBAAyB,CAAA,QAAS,MAAM,UAAU","ignoreList":[0]}},
    {"offset": {"line": 4199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4205, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4328, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js"],"sourcesContent":["import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));"],"names":[],"mappings":";;;;;;;;AAAA;;AAKO,MAAM,6BAA6B,CAAA,QAAS,MAAM,cAAc;AAOhE,MAAM,oCAAoC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,4BAA4B,CAAA,QAAS,MAAM,OAAO;AAM3G,MAAM,0CAA0C,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,4BAA4B,CAAA,QAAS,MAAM,iBAAiB;AAM3H,MAAM,uCAAuC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,4BAA4B,CAAA,QAAS,MAAM,cAAc;AAOrH,MAAM,4BAA4B,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,4BAA4B,CAAA,QAAS,MAAM,aAAa;AAQzG,MAAM,mCAAmC,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,CAAA,QAAS,MAAM,cAAc,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAA,QAAS,MAAM,cAAc,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,kBAAkB,kBAAoB,CAAC;QACxO;QACA;IACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4353, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AACO,MAAM,uBAAuB;IAClC,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,iBAAiB;AACnB;AACO,MAAM,iCAAiC,CAAC,OAAO;IACpD,MAAM,EACJ,qBAAqB,EACrB,UAAU,EACX,GAAG;IACJ,MAAM,iBAAiB;QACrB,SAAS,CAAC;QACV,mBAAmB,CAAC;QACpB,gBAAgB,CAAC,yBAAyB,CAAC;QAC3C,eAAe;IACjB;IACA,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;QACzB;IACF;AACF;AACO,SAAS,sBAAsB,MAAM,EAAE,KAAK;IACjD;;GAEC,GAED,MAAM,oBAAoB,CAAA;QACxB,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACnD,gBAAgB,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,cAAc,EAAE;oBACjD;oBACA,mBAAmB;oBACnB,gBAAgB,WAAW,CAAC,MAAM,UAAU;gBAC9C;YACF;IACF;IACA,MAAM,0BAA0B,CAAA;QAC9B,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACnD,gBAAgB,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,cAAc,EAAE;oBACjD,mBAAmB;gBACrB;YACF;IACF;IACA,MAAM,MAAM;QACV,4BAA4B;QAC5B,kCAAkC;IACpC;IACA,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,KAAK;IAE9B;;GAEC,GAED,8CAA8C,GAC9C,qUAAM,SAAS,CAAC;QACd,kBAAkB,CAAC,MAAM,qBAAqB;IAChD,GAAG;QAAC,MAAM,qBAAqB;QAAE,MAAM,UAAU;KAAC;AAClD,6CAA6C,GAC/C","ignoreList":[0]}},
    {"offset": {"line": 4415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4421, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/virtualization/gridFocusedVirtualCellSelector.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createSelector } from 'reselect';\nimport { createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRenderContextSelector } from \"./gridVirtualizationSelectors.js\";\nimport { gridFocusCellSelector } from \"../focus/index.js\";\nimport { gridVisibleRowsSelector } from \"../pagination/index.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nconst gridIsFocusedCellOutOfContext = createSelector(gridFocusCellSelector, gridRenderContextSelector, gridVisibleRowsSelector, gridVisibleColumnDefinitionsSelector, gridRowsLookupSelector, (focusedCell, renderContext, currentPage, visibleColumns, rows) => {\n  if (!focusedCell) {\n    return false;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return false;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  const columnIndex = visibleColumns.slice(renderContext.firstColumnIndex, renderContext.lastColumnIndex).findIndex(column => column.field === focusedCell.field);\n  const isInRenderContext = rowIndex !== undefined && columnIndex !== -1 && rowIndex >= renderContext.firstRowIndex && rowIndex <= renderContext.lastRowIndex;\n  return !isInRenderContext;\n});\nexport const gridFocusedVirtualCellSelector = createSelectorMemoized(gridIsFocusedCellOutOfContext, gridVisibleColumnDefinitionsSelector, gridVisibleRowsSelector, gridRowsLookupSelector, gridFocusCellSelector, (isFocusedCellOutOfRenderContext, visibleColumns, currentPage, rows, focusedCell) => {\n  if (!isFocusedCellOutOfRenderContext) {\n    return null;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return null;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  if (rowIndex === undefined) {\n    return null;\n  }\n  const columnIndex = visibleColumns.findIndex(column => column.field === focusedCell.field);\n  if (columnIndex === -1) {\n    return null;\n  }\n  return _extends({}, focusedCell, {\n    rowIndex,\n    columnIndex\n  });\n});"],"names":[],"mappings":";;;AAAA;AACA;AAIA;AADA;AAEA;AAHA;AAIA;AALA;;;;;;;;;AAMA,MAAM,gCAAgC,CAAA,GAAA,kMAAA,CAAA,iBAAc,AAAD,EAAE,sZAAA,CAAA,wBAAqB,EAAE,oaAAA,CAAA,4BAAyB,EAAE,2ZAAA,CAAA,0BAAuB,EAAE,qZAAA,CAAA,uCAAoC,EAAE,+YAAA,CAAA,yBAAsB,EAAE,CAAC,aAAa,eAAe,aAAa,gBAAgB;IACtP,IAAI,CAAC,aAAa;QAChB,OAAO;IACT;IACA,MAAM,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;IAChC,IAAI,CAAC,KAAK;QACR,OAAO;IACT;IACA,MAAM,WAAW,YAAY,aAAa,CAAC,GAAG,CAAC;IAC/C,MAAM,cAAc,eAAe,KAAK,CAAC,cAAc,gBAAgB,EAAE,cAAc,eAAe,EAAE,SAAS,CAAC,CAAA,SAAU,OAAO,KAAK,KAAK,YAAY,KAAK;IAC9J,MAAM,oBAAoB,aAAa,aAAa,gBAAgB,CAAC,KAAK,YAAY,cAAc,aAAa,IAAI,YAAY,cAAc,YAAY;IAC3J,OAAO,CAAC;AACV;AACO,MAAM,iCAAiC,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,+BAA+B,qZAAA,CAAA,uCAAoC,EAAE,2ZAAA,CAAA,0BAAuB,EAAE,+YAAA,CAAA,yBAAsB,EAAE,sZAAA,CAAA,wBAAqB,EAAE,CAAC,iCAAiC,gBAAgB,aAAa,MAAM;IACrR,IAAI,CAAC,iCAAiC;QACpC,OAAO;IACT;IACA,MAAM,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;IAChC,IAAI,CAAC,KAAK;QACR,OAAO;IACT;IACA,MAAM,WAAW,YAAY,aAAa,CAAC,GAAG,CAAC;IAC/C,IAAI,aAAa,WAAW;QAC1B,OAAO;IACT;IACA,MAAM,cAAc,eAAe,SAAS,CAAC,CAAA,SAAU,OAAO,KAAK,KAAK,YAAY,KAAK;IACzF,IAAI,gBAAgB,CAAC,GAAG;QACtB,OAAO;IACT;IACA,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,aAAa;QAC/B;QACA;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 4474, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4480, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport reactMajor from '@mui/x-internals/reactMajor';\nimport { gridDimensionsSelector, gridColumnsTotalWidthSelector, gridContentHeightSelector, gridHasFillerSelector, gridRowHeightSelector, gridVerticalScrollbarWidthSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiOptionHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { minimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"../columns/index.js\";\nimport { gridFocusedVirtualCellSelector } from \"./gridFocusedVirtualCellSelector.js\";\nimport { roundToDecimalPlaces } from \"../../../utils/roundToDecimalPlaces.js\";\nimport { isJSDOM } from \"../../../utils/isJSDOM.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\n  const pinnedColumns = listView ? EMPTY_PINNED_COLUMN_FIELDS : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef);\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  const isRenderContextReady = React.useRef(false);\n  const rowHeight = useGridSelector(apiRef, gridRowHeightSelector);\n  const contentHeight = useGridSelector(apiRef, gridContentHeightSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const needsHorizontalScrollbar = useGridSelector(apiRef, needsHorizontalScrollbarSelector);\n  const verticalScrollbarWidth = useGridSelector(apiRef, gridVerticalScrollbarWidthSelector);\n  const gridHasFiller = useGridSelector(apiRef, gridHasFillerSelector);\n  const previousSize = React.useRef(null);\n  const mainRefCallback = React.useCallback(node => {\n    mainRef.current = node;\n    if (!node) {\n      return undefined;\n    }\n    const initialRect = node.getBoundingClientRect();\n    let lastSize = {\n      width: roundToDecimalPlaces(initialRect.width, 1),\n      height: roundToDecimalPlaces(initialRect.height, 1)\n    };\n    if (!previousSize.current || lastSize.width !== previousSize.current.width && lastSize.height !== previousSize.current.height) {\n      previousSize.current = lastSize;\n      apiRef.current.publishEvent('resize', lastSize);\n    }\n    if (typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      if (!entry) {\n        return;\n      }\n      const newSize = {\n        width: roundToDecimalPlaces(entry.contentRect.width, 1),\n        height: roundToDecimalPlaces(entry.contentRect.height, 1)\n      };\n      if (newSize.width === lastSize.width && newSize.height === lastSize.height) {\n        return;\n      }\n      apiRef.current.publishEvent('resize', newSize);\n      lastSize = newSize;\n    });\n    observer.observe(node);\n    if (reactMajor >= 19) {\n      return () => {\n        mainRef.current = null;\n        observer.disconnect();\n      };\n    }\n    return undefined;\n  }, [apiRef, mainRef]);\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(rootProps.initialState?.scroll ?? EMPTY_SCROLL_POSITION);\n  const ignoreNextScrollEvent = React.useRef(false);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const focusedVirtualCell = useGridSelector(apiRef, gridFocusedVirtualCellSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if we already have a render context, because\n    // otherwise we would call an update directly on mount\n    const isReady = gridDimensionsSelector(apiRef.current.state).isReady;\n    if (isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const scroller = scrollerRef.current;\n    if (!scroller) {\n      return undefined;\n    }\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const maxScrollTop = Math.ceil(dimensions.minimumSize.height - dimensions.viewportOuterSize.height);\n    const maxScrollLeft = Math.ceil(dimensions.minimumSize.width - dimensions.viewportInnerSize.width);\n\n    // Clamp the scroll position to the viewport to avoid re-calculating the render context for scroll bounce\n    const newScroll = {\n      top: clamp(scroller.scrollTop, 0, maxScrollTop),\n      left: isRtl ? clamp(scroller.scrollLeft, -maxScrollLeft, 0) : clamp(scroller.scrollLeft, 0, maxScrollLeft)\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    // skip update if dimensions are not ready and virtualization is enabled\n    if (!gridDimensionsSelector(apiRef.current.state).isReady && (enabledForRows || enabledForColumns)) {\n      return;\n    }\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(() => {\n    if (ignoreNextScrollEvent.current) {\n      ignoreNextScrollEvent.current = false;\n      return;\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    let baseRenderContext = renderContext;\n    if (params.renderContext) {\n      baseRenderContext = params.renderContext;\n      baseRenderContext.firstColumnIndex = renderContext.firstColumnIndex;\n      baseRenderContext.lastColumnIndex = renderContext.lastColumnIndex;\n    }\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedVirtualCell) {\n      if (focusedVirtualCell.rowIndex < firstRowToRender) {\n        rowIndexes.unshift(focusedVirtualCell.rowIndex);\n        virtualRowIndex = focusedVirtualCell.rowIndex;\n      }\n      if (focusedVirtualCell.rowIndex > lastRowToRender) {\n        rowIndexes.push(focusedVirtualCell.rowIndex);\n        virtualRowIndex = focusedVirtualCell.rowIndex;\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      let currentRenderContext = baseRenderContext;\n      if (frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const isVirtualFocusRow = rowIndexInPage === virtualRowIndex;\n      const isVirtualFocusColumn = focusedVirtualCell?.rowIndex === rowIndex;\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      const firstColumnIndex = currentRenderContext.firstColumnIndex;\n      const lastColumnIndex = currentRenderContext.lastColumnIndex;\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetLeft: offsetLeft,\n        columnsTotalWidth: columnsTotalWidth,\n        rowHeight: baseRowHeight,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnIndex: firstColumnIndex,\n        lastColumnIndex: lastColumnIndex,\n        focusedColumnIndex: isVirtualFocusColumn ? focusedVirtualCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isVirtualFocusRow,\n        showBottomBorder: showBottomBorder,\n        scrollbarWidth: verticalScrollbarWidth,\n        gridHasFiller: gridHasFiller\n      }, rowProps), id));\n      if (isVirtualFocusRow) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (size.flexBasis === 0) {\n      size.flexBasis = minimalContentHeight; // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [columnsTotalWidth, contentHeight, needsHorizontalScrollbar]);\n  const onContentSizeApplied = React.useCallback(node => {\n    if (!node) {\n      return;\n    }\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange', {\n      columnsTotalWidth,\n      contentHeight\n    });\n  }, [apiRef, columnsTotalWidth, contentHeight]);\n  useEnhancedEffect(() => {\n    if (!isRenderContextReady.current) {\n      return;\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, enabledForColumns, enabledForRows]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(renderContext !== EMPTY_RENDER_CONTEXT, () => {\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext\n    });\n    isRenderContextReady.current = true;\n    if (rootProps.initialState?.scroll && scrollerRef.current) {\n      const scroller = scrollerRef.current;\n      const {\n        top,\n        left\n      } = rootProps.initialState.scroll;\n\n      // On initial mount, if we have columns available, we can restore the horizontal scroll immediately, but we need to skip the resulting scroll event, otherwise we would recalculate the render context at position top=0, left=restoredValue, but the initial render context is already calculated based on the initial value of scrollPosition ref.\n      const isScrollRestored = {\n        top: !(top > 0),\n        left: !(left > 0)\n      };\n      if (!isScrollRestored.left && columnsTotalWidth) {\n        scroller.scrollLeft = left;\n        ignoreNextScrollEvent.current = true;\n        isScrollRestored.left = true;\n      }\n\n      // For the sake of completeness, but I'm not sure if contentHeight is ever available at this point. Maybe when virtualisation is disabled?\n      if (!isScrollRestored.top && contentHeight) {\n        scroller.scrollTop = top;\n        ignoreNextScrollEvent.current = true;\n        isScrollRestored.top = true;\n      }\n\n      // To restore the vertical scroll, we need to wait until the rows are available in the DOM (otherwise there's nowhere to scroll), but before paint to avoid reflows\n      if (!isScrollRestored.top || !isScrollRestored.left) {\n        const unsubscribeContentSizeChange = apiRef.current.subscribeEvent('virtualScrollerContentSizeChange', params => {\n          if (!isScrollRestored.left && params.columnsTotalWidth) {\n            scroller.scrollLeft = left;\n            ignoreNextScrollEvent.current = true;\n            isScrollRestored.left = true;\n          }\n          if (!isScrollRestored.top && params.contentHeight) {\n            scroller.scrollTop = top;\n            ignoreNextScrollEvent.current = true;\n            isScrollRestored.top = true;\n          }\n          if (isScrollRestored.left && isScrollRestored.top) {\n            unsubscribeContentSizeChange();\n          }\n        });\n        return unsubscribeContentSizeChange;\n      }\n    }\n    return undefined;\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', forceUpdateRenderContext);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', forceUpdateRenderContext);\n  useGridApiOptionHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRefCallback\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation',\n      ref: onContentSizeApplied\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation',\n      scrollPosition\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation',\n      scrollPosition\n    }),\n    getScrollAreaProps: () => ({\n      scrollPosition\n    })\n  };\n};\n// dimension selectors\nfunction needsHorizontalScrollbarSelector(state) {\n  return state.dimensions.viewportOuterSize.width > 0 && state.dimensions.columnsTotalWidth > state.dimensions.viewportOuterSize.width;\n}\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false,\n    virtualizeColumnsWithAutoRowHeight: rootProps.virtualizeColumnsWithAutoRowHeight\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  if (inputs.listView) {\n    return _extends({}, renderContext, {\n      lastColumnIndex: 1\n    });\n  }\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    if (!inputs.virtualizeColumnsWithAutoRowHeight) {\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n    }\n    if (!hasRowWithAutoHeight || inputs.virtualizeColumnsWithAutoRowHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5354, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js"],"sourcesContent":["/**\n * Get the list column definition\n * @category List View\n * @ignore - Do not document\n */\nexport const gridListColumnSelector = state => state.listViewColumn;"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,yBAAyB,CAAA,QAAS,MAAM,cAAc","ignoreList":[0]}},
    {"offset": {"line": 5362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5368, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/listView/useGridListView.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: props.unstable_listColumn ? _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  }) : undefined\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n  React.useEffect(() => {\n    if (props.unstable_listView && !props.unstable_listColumn) {\n      warnOnce(['MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.', 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: \"example\", renderCell: (params) => <div>{params.row.id}</div> }`.', 'For more details, see https://mui.com/x/react-data-grid/list-view/']);\n    }\n  }, [props.unstable_listView, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAIA;AAHA;AACA;AACA;;;;;;;AAEO,MAAM,2BAA2B,CAAC,OAAO,OAAO,SAAW,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;QACpF,gBAAgB,MAAM,mBAAmB,GAAG,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,mBAAmB,EAAE;YAClF,eAAe,mBAAmB;QACpC,KAAK;IACP;AACO,SAAS,gBAAgB,MAAM,EAAE,KAAK;IAC3C;;GAEC,GACD,MAAM,wBAAwB;QAC5B,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA;YACtB,IAAI,CAAC,MAAM,cAAc,EAAE;gBACzB,OAAO;YACT;YACA,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACzB,gBAAgB,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,cAAc,EAAE;oBACjD,eAAe,mBAAmB;gBACpC;YACF;QACF;IACF;IACA,MAAM,iBAAiB,qUAAM,MAAM,CAAC;IACpC,MAAM,uBAAuB,CAAA;QAC3B,IAAI,eAAe,OAAO,KAAK,kBAAkB,KAAK,EAAE;YACtD,eAAe,OAAO,GAAG,kBAAkB,KAAK;YAChD;QACF;IACF;IACA,CAAA,GAAA,0YAAA,CAAA,yBAAsB,AAAD,EAAE,QAAQ,2BAA2B;IAC1D,CAAA,GAAA,0YAAA,CAAA,yBAAsB,AAAD,EAAE,QAAQ,+BAA+B;IAE9D;;GAEC,GACD,CAAA,GAAA,oSAAA,CAAA,UAAiB,AAAD,EAAE;QAChB,MAAM,aAAa,MAAM,mBAAmB;QAC5C,IAAI,YAAY;YACd,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA;gBACtB,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;oBACzB,gBAAgB,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,YAAY;wBACvC,eAAe,mBAAmB;oBACpC;gBACF;YACF;QACF;IACF,GAAG;QAAC;QAAQ,MAAM,mBAAmB;KAAC;IACtC,qUAAM,SAAS,CAAC;QACd,IAAI,MAAM,iBAAiB,IAAI,CAAC,MAAM,mBAAmB,EAAE;YACzD,CAAA,GAAA,mSAAA,CAAA,WAAQ,AAAD,EAAE;gBAAC;gBAAwF;gBAAwJ;aAAqE;QACjU;IACF,GAAG;QAAC,MAAM,iBAAiB;QAAE,MAAM,mBAAmB;KAAC;AACzD;AACA,SAAS,mBAAmB,MAAM;IAChC,OAAO,CAAA,GAAA,4ZAAA,CAAA,yBAAsB,AAAD,EAAE,OAAO,OAAO,CAAC,KAAK,EAAE,iBAAiB,CAAC,KAAK;AAC7E","ignoreList":[0]}},
    {"offset": {"line": 5446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5452, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js"],"sourcesContent":["import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};"],"names":[],"mappings":";;;;;;;AAAA;;AACA,MAAM,gBAAgB;AACf,MAAM,kBAAkB,CAAA,eAAgB,eAAe,IAAI;AAC3D,MAAM,eAAe,CAAC,UAAU,UAAU;IAC/C,IAAI,WAAW,KAAK,WAAW,GAAG;QAChC,OAAO,KAAK,IAAI,CAAC,WAAW;IAC9B;IACA,IAAI,aAAa,CAAC,GAAG;QACnB,qEAAqE;QACrE,OAAO,OAAO;IAChB;IACA,OAAO;AACT;AACO,MAAM,gCAAgC,CAAA,eAAgB,CAAC;QAC5D,MAAM;QACN,UAAU,eAAe,IAAI;IAC/B,CAAC;AACM,MAAM,eAAe,CAAC,MAAM,YAAY,CAAC;IAC9C,IAAI,cAAc,GAAG;QACnB,OAAO;IACT;IACA,OAAO,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,MAAM,YAAY,IAAI;AACjD;AACO,MAAM,iCAAiC,CAAC,UAAU;IACvD,IAAI,kBAAkB,0YAAA,CAAA,gBAAa,CAAC,QAAQ,IAAI,WAAW,eAAe;QACxE,MAAM,IAAI,MAAM;YAAC;YAA2E;SAA0F,CAAC,IAAI,CAAC;IAC9L;AACF","ignoreList":[0]}},
    {"offset": {"line": 5491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5497, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js"],"sourcesContent":["import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationEnabledClientSideSelector = createSelector(gridPaginationSelector, pagination => pagination.enabled && pagination.paginationMode === 'client');\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationEnabledClientSideSelector, gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (clientSidePaginationEnabled, paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  if (!clientSidePaginationEnabled) {\n    return null;\n  }\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the rows, range and rowIndex lookup map after filtering and sorting.\n * Does not contain the collapsed children.\n * @category Pagination\n */\nexport const gridVisibleRowsSelector = createSelectorMemoized(gridPaginationEnabledClientSideSelector, gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector, gridExpandedSortedRowEntriesSelector, (clientPaginationEnabled, paginationRowRange, paginationRows, expandedSortedRowEntries) => {\n  if (clientPaginationEnabled) {\n    return {\n      rows: paginationRows,\n      range: paginationRowRange,\n      rowToIndexMap: paginationRows.reduce((lookup, row, index) => {\n        lookup.set(row.model, index);\n        return lookup;\n      }, new Map())\n    };\n  }\n  return {\n    rows: expandedSortedRowEntries,\n    range: expandedSortedRowEntries.length === 0 ? null : {\n      firstRowIndex: 0,\n      lastRowIndex: expandedSortedRowEntries.length - 1\n    },\n    rowToIndexMap: expandedSortedRowEntries.reduce((lookup, row, index) => {\n      lookup.set(row.model, index);\n      return lookup;\n    }, new Map())\n  };\n});"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5611, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;AAEA;AAFA;AACA;;;;;;AAEO,MAAM,wBAAwB,CAAC,QAAQ;IAC5C,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;IACrC,MAAM,iBAAiB,CAAA,GAAA,mYAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,2ZAAA,CAAA,6BAA0B;IACzE,OAAO,OAAO,CAAC,oBAAoB,CAAC;QAClC,SAAS;QACT,WAAW,MAAM,cAAc;QAC/B,cAAc,MAAM,sBAAsB;QAC1C,eAAe,2ZAAA,CAAA,6BAA0B;QACzC,aAAa;IACf;IAEA;;GAEC,GACD,MAAM,oBAAoB,qUAAM,WAAW,CAAC,CAAA;QAC1C,IAAI,mBAAmB,mBAAmB;YACxC;QACF;QACA,OAAO,KAAK,CAAC,+BAA+B;QAC5C,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACnD,YAAY,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,UAAU,EAAE;oBACzC,MAAM;gBACR;YACF;IACF,GAAG;QAAC;QAAQ;QAAQ;KAAe;IACnC,MAAM,oBAAoB;QACxB;IACF;IACA,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,mBAAmB;IAE5C;;GAEC,GACD,MAAM,2BAA2B,qUAAM,WAAW,CAAC,CAAC,WAAW;QAC7D,MAAM,yBAAyB,CAAA,GAAA,2ZAAA,CAAA,6BAA0B,AAAD,EAAE;QAC1D,MAAM,uBACN,yEAAyE;QACzE,CAAC,QAAQ,qBAAqB,IAC9B,sDAAsD;QACtD,MAAM,cAAc,IAAI,QACxB,6DAA6D;QAC7D,MAAM,YAAY,EAAE,YAAY,QAAQ;QACxC,IAAI,CAAC,sBAAsB;YACzB,OAAO;QACT;QACA,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,WAAW;YAC7B,YAAY,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,UAAU,UAAU,EAAE;gBAC7C,MAAM;YACR;QACF;IACF,GAAG;QAAC;QAAQ,MAAM,cAAc;QAAE,MAAM,YAAY,EAAE,YAAY;KAAK;IACvE,MAAM,4BAA4B,qUAAM,WAAW,CAAC,CAAC,QAAQ;QAC3D,MAAM,yBAAyB,QAAQ,cAAc,CAAC,UAAU,EAAE,OAAO,QAAQ,cAAc,CAAC,UAAU,CAAC,IAAI,GAAG,CAAA,GAAA,2ZAAA,CAAA,6BAA0B,AAAD,EAAE;QAC7I,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACnD,YAAY,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,UAAU,EAAE;oBACzC,MAAM;gBACR;YACF;QACA,OAAO;IACT,GAAG;QAAC;KAAO;IACX,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,eAAe;IACpD,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,gBAAgB;IAErD;;GAEC,GACD,qUAAM,SAAS,CAAC;QACd,IAAI,MAAM,cAAc,EAAE;YACxB,OAAO,OAAO,CAAC,iBAAiB,CAAC,MAAM,cAAc;QACvD;IACF,GAAG;QAAC;QAAQ,MAAM,cAAc;KAAC;AACnC","ignoreList":[0]}},
    {"offset": {"line": 5702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5708, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridFilterModelSelector, gridFilterActiveItemsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { isDeepEqual, runIf } from \"../../../utils/utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const previousFilterModel = React.useRef(gridFilterModelSelector(apiRef));\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'setPaginationModel');\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel.page === 0) {\n      return;\n    }\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n\n  /**\n   * Goes to the first row of the grid\n   */\n  const navigateToStart = React.useCallback(() => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel.page !== 0) {\n      apiRef.current.setPage(0);\n    }\n\n    // If the page was not changed it might be needed to scroll to the top\n    const scrollPosition = apiRef.current.getScrollPosition();\n    if (scrollPosition.top !== 0) {\n      apiRef.current.scroll({\n        top: 0\n      });\n    }\n  }, [apiRef]);\n\n  /**\n   * Resets the page only if the active items or quick filter has changed from the last time.\n   * This is to avoid resetting the page when the filter model is changed\n   * because of and update of the operator from an item that does not have the value\n   * or reseting when the filter panel is just opened\n   */\n  const handleFilterModelChange = React.useCallback(filterModel => {\n    const currentActiveFilters = _extends({}, filterModel, {\n      // replace items with the active items\n      items: gridFilterActiveItemsSelector(apiRef)\n    });\n    if (isDeepEqual(currentActiveFilters, previousFilterModel.current)) {\n      return;\n    }\n    previousFilterModel.current = currentActiveFilters;\n    navigateToStart();\n  }, [apiRef, navigateToStart]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n  useGridApiEventHandler(apiRef, 'sortModelChange', runIf(props.resetPageOnSortFilter, navigateToStart));\n  useGridApiEventHandler(apiRef, 'filterModelChange', runIf(props.resetPageOnSortFilter, handleFilterModelChange));\n\n  /**\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!props.pagination) {\n      return;\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.signature, props.pagination]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const isEnabled = props.pagination === true;\n      if (state.pagination.paginationMode === props.paginationMode || state.pagination.enabled === isEnabled) {\n        return state;\n      }\n      return _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationMode: props.paginationMode,\n          enabled: props.pagination === true\n        })\n      });\n    });\n  }, [apiRef, props.paginationMode, props.pagination]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5981, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/pagination/useGridRowCount.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6123, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/pagination/useGridPagination.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount ?? (props.paginationMode === 'client' ? state.rows?.totalRowCount : undefined);\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: _extends({}, state.pagination, {\n      paginationModel,\n      rowCount,\n      meta,\n      enabled: props.pagination === true,\n      paginationMode: props.paginationMode\n    })\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};"],"names":[],"mappings":";;;;AAAA;AACA;AAGA;AAFA;AACA;;;;;;AAEO,MAAM,6BAA6B,CAAC,OAAO;IAChD,MAAM,kBAAkB,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,CAAA,GAAA,wZAAA,CAAA,gCAA6B,AAAD,EAAE,MAAM,YAAY,GAAG,MAAM,eAAe,IAAI,MAAM,YAAY,EAAE,YAAY;IACjJ,CAAA,GAAA,wZAAA,CAAA,iCAA8B,AAAD,EAAE,gBAAgB,QAAQ,EAAE,MAAM,SAAS;IACxE,MAAM,WAAW,MAAM,QAAQ,IAAI,MAAM,YAAY,EAAE,YAAY,YAAY,CAAC,MAAM,cAAc,KAAK,WAAW,MAAM,IAAI,EAAE,gBAAgB,SAAS;IACzJ,MAAM,OAAO,MAAM,cAAc,IAAI,MAAM,YAAY,EAAE,YAAY,QAAQ,CAAC;IAC9E,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;QACzB,YAAY,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,MAAM,UAAU,EAAE;YACzC;YACA;YACA;YACA,SAAS,MAAM,UAAU,KAAK;YAC9B,gBAAgB,MAAM,cAAc;QACtC;IACF;AACF;AAMO,MAAM,oBAAoB,CAAC,QAAQ;IACxC,CAAA,GAAA,0ZAAA,CAAA,wBAAqB,AAAD,EAAE,QAAQ;IAC9B,CAAA,GAAA,2ZAAA,CAAA,yBAAsB,AAAD,EAAE,QAAQ;IAC/B,CAAA,GAAA,oZAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;AAC1B","ignoreList":[0]}},
    {"offset": {"line": 6157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6163, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js"],"sourcesContent":["import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridDimensionsSelector = state => state.dimensions;\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridDimensionsSelector, dimensions => dimensions.columnsTotalWidth);\nexport const gridRowHeightSelector = state => state.dimensions.rowHeight;\nexport const gridContentHeightSelector = state => state.dimensions.contentSize.height;\nexport const gridHasScrollXSelector = state => state.dimensions.hasScrollX;\nexport const gridHasScrollYSelector = state => state.dimensions.hasScrollY;\nexport const gridHasFillerSelector = state => state.dimensions.columnsTotalWidth < state.dimensions.viewportOuterSize.width;\nexport const gridHeaderHeightSelector = state => state.dimensions.headerHeight;\nexport const gridGroupHeaderHeightSelector = state => state.dimensions.groupHeaderHeight;\nexport const gridHeaderFilterHeightSelector = state => state.dimensions.headerFilterHeight;\nexport const gridVerticalScrollbarWidthSelector = state => state.dimensions.hasScrollY ? state.dimensions.scrollbarSize : 0;\nexport const gridHorizontalScrollbarHeightSelector = state => state.dimensions.hasScrollX ? state.dimensions.scrollbarSize : 0;\nexport const gridHasBottomFillerSelector = state => {\n  const height = state.dimensions.hasScrollX ? state.dimensions.scrollbarSize : 0;\n  const needsLastRowBorder = state.dimensions.viewportOuterSize.height - state.dimensions.minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return false;\n  }\n  return true;\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;AACO,MAAM,yBAAyB,CAAA,QAAS,MAAM,UAAU;AAMxD,MAAM,gCAAgC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,wBAAwB,CAAA,aAAc,WAAW,iBAAiB;AACvH,MAAM,wBAAwB,CAAA,QAAS,MAAM,UAAU,CAAC,SAAS;AACjE,MAAM,4BAA4B,CAAA,QAAS,MAAM,UAAU,CAAC,WAAW,CAAC,MAAM;AAC9E,MAAM,yBAAyB,CAAA,QAAS,MAAM,UAAU,CAAC,UAAU;AACnE,MAAM,yBAAyB,CAAA,QAAS,MAAM,UAAU,CAAC,UAAU;AACnE,MAAM,wBAAwB,CAAA,QAAS,MAAM,UAAU,CAAC,iBAAiB,GAAG,MAAM,UAAU,CAAC,iBAAiB,CAAC,KAAK;AACpH,MAAM,2BAA2B,CAAA,QAAS,MAAM,UAAU,CAAC,YAAY;AACvE,MAAM,gCAAgC,CAAA,QAAS,MAAM,UAAU,CAAC,iBAAiB;AACjF,MAAM,iCAAiC,CAAA,QAAS,MAAM,UAAU,CAAC,kBAAkB;AACnF,MAAM,qCAAqC,CAAA,QAAS,MAAM,UAAU,CAAC,UAAU,GAAG,MAAM,UAAU,CAAC,aAAa,GAAG;AACnH,MAAM,wCAAwC,CAAA,QAAS,MAAM,UAAU,CAAC,UAAU,GAAG,MAAM,UAAU,CAAC,aAAa,GAAG;AACtH,MAAM,8BAA8B,CAAA;IACzC,MAAM,SAAS,MAAM,UAAU,CAAC,UAAU,GAAG,MAAM,UAAU,CAAC,aAAa,GAAG;IAC9E,MAAM,qBAAqB,MAAM,UAAU,CAAC,iBAAiB,CAAC,MAAM,GAAG,MAAM,UAAU,CAAC,WAAW,CAAC,MAAM,GAAG;IAC7G,IAAI,WAAW,KAAK,CAAC,oBAAoB;QACvC,OAAO;IACT;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 6200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6206, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nimport { roundToDecimalPlaces } from \"../../../utils/roundToDecimalPlaces.js\";\nimport { isJSDOM } from \"../../../utils/isJSDOM.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = (state, props, apiRef) => {\n  const dimensions = EMPTY_DIMENSIONS;\n  const density = gridDensityFactorSelector(apiRef);\n  return _extends({}, state, {\n    dimensions: _extends({}, dimensions, getStaticDimensions(props, apiRef, density, gridVisiblePinnedColumnDefinitionsSelector(apiRef)))\n  });\n};\nconst columnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return roundToDecimalPlaces(positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth, 1);\n});\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, columnsTotalWidthSelector);\n  const isFirstSizing = React.useRef(true);\n  const {\n    rowHeight,\n    headerHeight,\n    groupHeaderHeight,\n    headerFilterHeight,\n    headersTotalHeight,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = getStaticDimensions(props, apiRef, densityFactor, pinnedColumns);\n  const previousSize = React.useRef(undefined);\n  const getRootDimensions = React.useCallback(() => gridDimensionsSelector(apiRef.current.state), [apiRef]);\n  const setDimensions = React.useCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n    if (apiRef.current.rootElementRef.current) {\n      setCSSVariables(apiRef.current.rootElementRef.current, gridDimensionsSelector(apiRef.current.state));\n    }\n  }, [apiRef]);\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef);\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    if (isFirstSizing.current) {\n      return;\n    }\n    // All the floating point dimensions should be rounded to .1 decimal places to avoid subpixel rendering issues\n    // https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\n    // https://github.com/mui/mui-x/issues/15721\n    const rootElement = apiRef.current.rootElementRef.current;\n    const scrollbarSize = measureScrollbarSize(rootElement, props.scrollbarSize);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const topContainerHeight = headersTotalHeight + rowsMeta.pinnedTopRowsTotalHeight;\n    const bottomContainerHeight = rowsMeta.pinnedBottomRowsTotalHeight;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: roundToDecimalPlaces(rowsMeta.currentPageTotalHeight, 1)\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    if (isDeepEqual(prevDimensions, newDimensions)) {\n      return;\n    }\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const updateDimensionCallback = useEventCallback(updateDimensions);\n  const debouncedUpdateDimensions = React.useMemo(() => props.resizeThrottleMs > 0 ? throttle(() => {\n    updateDimensionCallback();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, props.resizeThrottleMs) : undefined, [apiRef, props.resizeThrottleMs, updateDimensionCallback]);\n  React.useEffect(() => debouncedUpdateDimensions?.clear, [debouncedUpdateDimensions]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  const handleRootMount = React.useCallback(root => {\n    setCSSVariables(root, gridDimensionsSelector(apiRef.current.state));\n  }, [apiRef]);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current || !debouncedUpdateDimensions) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      isFirstSizing.current = false;\n      updateDimensions();\n      return;\n    }\n    debouncedUpdateDimensions();\n  }, [updateDimensions, props.autoHeight, debouncedUpdateDimensions, logger]);\n  useGridApiOptionHandler(apiRef, 'rootMount', handleRootMount);\n  useGridApiOptionHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction setCSSVariables(root, dimensions) {\n  const set = (k, v) => root.style.setProperty(k, v);\n  set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n  set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n  set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n  set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n  set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n  set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n  set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n  set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n  set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n  set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n  set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n  set('--height', `${dimensions.rowHeight}px`);\n}\nfunction getStaticDimensions(props, apiRef, density, pinnedColumnns) {\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  return {\n    rowHeight: Math.floor(validRowHeight * density),\n    headerHeight: Math.floor(props.columnHeaderHeight * density),\n    groupHeaderHeight: Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * density),\n    headerFilterHeight: Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * density),\n    columnsTotalWidth: columnsTotalWidthSelector(apiRef),\n    headersTotalHeight: getTotalHeaderHeight(apiRef, props),\n    leftPinnedWidth: pinnedColumnns.left.reduce((w, col) => w + col.computedWidth, 0),\n    rightPinnedWidth: pinnedColumnns.right.reduce((w, col) => w + col.computedWidth, 0)\n  };\n}\nconst scrollbarSizeCache = new WeakMap();\nfunction measureScrollbarSize(rootElement, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null) {\n    return 0;\n  }\n  const cachedSize = scrollbarSizeCache.get(rootElement);\n  if (cachedSize !== undefined) {\n    return cachedSize;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  scrollbarSizeCache.set(rootElement, size);\n  return size;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6596, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/density/densitySelector.js"],"sourcesContent":["import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,yBAAyB;AAC/B,MAAM,6BAA6B;AAC1C,MAAM,kBAAkB;IACtB,SAAS;IACT,aAAa;IACb,UAAU;AACZ;AACO,MAAM,sBAAsB,CAAA,QAAS,MAAM,OAAO;AAClD,MAAM,4BAA4B,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,qBAAqB,CAAA,UAAW,eAAe,CAAC,QAAQ","ignoreList":[0]}},
    {"offset": {"line": 6613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6619, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/density/useGridDensity.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AAEA;AAHA;AAEA;AAEA;;;;;;;;AACO,MAAM,0BAA0B,CAAC,OAAO,QAAU,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;QAC3E,SAAS,MAAM,YAAY,EAAE,WAAW,MAAM,OAAO,IAAI;IAC3D;AACO,MAAM,iBAAiB,CAAC,QAAQ;IACrC,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;IACrC,OAAO,OAAO,CAAC,oBAAoB,CAAC;QAClC,SAAS;QACT,WAAW,MAAM,OAAO;QACxB,cAAc,MAAM,eAAe;QACnC,eAAe,iZAAA,CAAA,sBAAmB;QAClC,aAAa;IACf;IACA,MAAM,aAAa,CAAA,GAAA,kSAAA,CAAA,UAAgB,AAAD,EAAE,CAAA;QAClC,MAAM,iBAAiB,CAAA,GAAA,iZAAA,CAAA,sBAAmB,AAAD,EAAE,OAAO,OAAO,CAAC,KAAK;QAC/D,IAAI,mBAAmB,YAAY;YACjC;QACF;QACA,OAAO,KAAK,CAAC,CAAC,oBAAoB,EAAE,YAAY;QAChD,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACnD,SAAS;YACX;IACF;IACA,MAAM,aAAa;QACjB;IACF;IACA,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,YAAY;IACrC,MAAM,2BAA2B,qUAAM,WAAW,CAAC,CAAC,WAAW;QAC7D,MAAM,kBAAkB,CAAA,GAAA,iZAAA,CAAA,sBAAmB,AAAD,EAAE,OAAO,OAAO,CAAC,KAAK;QAChE,MAAM,uBACN,yEAAyE;QACzE,CAAC,QAAQ,qBAAqB,IAC9B,+CAA+C;QAC/C,MAAM,OAAO,IAAI,QACjB,sDAAsD;QACtD,MAAM,YAAY,EAAE,WAAW;QAC/B,IAAI,CAAC,sBAAsB;YACzB,OAAO;QACT;QACA,OAAO,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,WAAW;YAC7B,SAAS;QACX;IACF,GAAG;QAAC;QAAQ,MAAM,OAAO;QAAE,MAAM,YAAY,EAAE;KAAQ;IACvD,MAAM,4BAA4B,qUAAM,WAAW,CAAC,CAAC,QAAQ;QAC3D,MAAM,kBAAkB,QAAQ,cAAc,EAAE,UAAU,QAAQ,cAAc,CAAC,OAAO,GAAG,CAAA,GAAA,iZAAA,CAAA,sBAAmB,AAAD,EAAE,OAAO,OAAO,CAAC,KAAK;QACnI,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAA,QAAS,CAAA,GAAA,+NAAA,CAAA,UAAQ,AAAD,EAAE,CAAC,GAAG,OAAO;gBACnD,SAAS;YACX;QACA,OAAO;IACT,GAAG;QAAC;KAAO;IACX,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,eAAe;IACpD,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,gBAAgB;IACrD,qUAAM,SAAS,CAAC;QACd,IAAI,MAAM,OAAO,EAAE;YACjB,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,OAAO;QACzC;IACF,GAAG;QAAC;QAAQ,MAAM,OAAO;KAAC;AAC5B","ignoreList":[0]}},
    {"offset": {"line": 6700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6706, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js"],"sourcesContent":["import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,mCAAmC,CAAA,QAAS,MAAM,eAAe;AACvE,MAAM,qCAAqC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,kCACjE,gGAAgG;AAChG,CAAA,uBAAwB,sBAAsB,WAAW;AAClD,MAAM,uCAAuC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,kCAAkC,CAAA,uBAAwB,qBAAqB,OAAO;AAClJ,MAAM,kCAAkC,CAAA,GAAA,yXAAA,CAAA,iBAAc,AAAD,EAAE,kCAAkC,CAAA,uBAAwB,qBAAqB,QAAQ","ignoreList":[0]}},
    {"offset": {"line": 6719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6725, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridColumnsTotalWidthSelector, gridGroupHeaderHeightSelector, gridHasFillerSelector, gridHeaderHeightSelector, gridVerticalScrollbarWidthSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridRenderContextColumnsSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../../utils/cellBorderUtils.js\";\nimport { PinnedColumnPosition } from \"../../../internals/constants.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const gridHasFiller = useGridSelector(apiRef, gridHasFillerSelector);\n  const headerHeight = useGridSelector(apiRef, gridHeaderHeightSelector);\n  const groupHeaderHeight = useGridSelector(apiRef, gridGroupHeaderHeightSelector);\n  const scrollbarWidth = useGridSelector(apiRef, gridVerticalScrollbarWidthSelector);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === PinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, colDef.computedWidth, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      const siblingWithBorderingSeparator = pinnedPosition === PinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      const indexInSection = i;\n      const sectionLength = renderedColumns.length;\n      const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n      const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused,\n        showLeftBorder: showLeftBorder,\n        showRightBorder: showRightBorder\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: PinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext\n      }), rightRenderContext && getColumnHeaders({\n        position: PinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, headerInfo.width, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === PinnedColumnPosition.LEFT) {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: index === visibleColumnGroupHeader.length - 1,\n        maxDepth: headerGroupingMaxDepth,\n        height: groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        showLeftBorder: shouldCellShowLeftBorder(pinnedPosition, indexInSection),\n        showRightBorder: shouldCellShowRightBorder(pinnedPosition, indexInSection, visibleColumnGroupHeader.length, rootProps.showCellVerticalBorder, gridHasFiller)\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: PinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: PinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    columnPositions,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    getPinnedCellOffset,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7052, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js"],"sourcesContent":["export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false,\n  disableColumnVirtualization: true\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */"],"names":[],"mappings":";;;AAAO,MAAM,gCAAgC;IAC3C,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,QAAQ;IACR,6BAA6B;AAC/B,GAEA;;CAEC","ignoreList":[0]}},
    {"offset": {"line": 7064, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7070, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef(undefined);\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef(null);\n  const resizeDirection = React.useRef(null);\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef(undefined);\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    if (columnWidthDiff > 0) {\n      const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n      apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    }\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      disableColumnVirtualization: false,\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      if (!props.disableVirtualization && options.disableColumnVirtualization) {\n        apiRef.current.unstable_setColumnVirtualization(false);\n        await columnVirtualizationDisabled();\n      }\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field],\n        flex: 0\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const dimensions = apiRef.current.getRootDimensions();\n        const availableWidth = dimensions.viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      if (!props.disableVirtualization) {\n        apiRef.current.unstable_setColumnVirtualization(true);\n      }\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled, props.disableVirtualization]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7648, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7654, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/keyboardNavigation/utils.js"],"sourcesContent":["import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}"],"names":[],"mappings":";;;;;AACA;AADA;;;AAEO,MAAM,qBAAqB,CAAC,EACjC,eAAe,EACf,aAAa,EACb,YAAY,EACZ,KAAK,EACN;IACC,IAAI,OAAO;QACT,IAAI,kBAAkB,cAAc;YAClC,OAAO,kBAAkB;QAC3B;IACF,OAAO,IAAI,CAAC,OAAO;QACjB,IAAI,kBAAkB,eAAe;YACnC,OAAO,kBAAkB;QAC3B;IACF;IACA,OAAO;AACT;AACO,MAAM,sBAAsB,CAAC,EAClC,eAAe,EACf,aAAa,EACb,YAAY,EACZ,KAAK,EACN;IACC,IAAI,OAAO;QACT,IAAI,kBAAkB,eAAe;YACnC,OAAO,kBAAkB;QAC3B;IACF,OAAO,IAAI,CAAC,OAAO;QACjB,IAAI,kBAAkB,cAAc;YAClC,OAAO,kBAAkB;QAC3B;IACF;IACA,OAAO;AACT;AACO,SAAS,sBAAsB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,oBAAoB;IAC9E,MAAM,qBAAqB,CAAA,GAAA,uZAAA,CAAA,qCAAkC,AAAD,EAAE;IAC9D,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE;QACvC,OAAO;IACT;IACA,MAAM,uBAAuB,CAAA,GAAA,mZAAA,CAAA,mCAAgC,AAAD,EAAE;IAC9D,wEAAwE;IACxE,IAAI,eAAe,qBAAqB,OAAO,CAAC,SAAS,CAAC,yBAAyB,SAAS,IAAI,CAAC,CAAC;IAClG,MAAO,gBAAgB,KAAK,eAAe,qBAAqB,MAAM,CAAE;QACtE,MAAM,YAAY,oBAAoB,CAAC,aAAa;QACpD,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE;YAC3C,OAAO;QACT;QACA,gBAAgB,yBAAyB,SAAS,IAAI,CAAC;IACzD;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 7704, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7710, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js"],"sourcesContent":["import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { GRID_TREE_DATA_GROUPING_FIELD, GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { isGroupingColumn } from \"../../../internals/utils/gridRowGroupingUtils.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridVisibleRowsSelector } from \"../pagination/index.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nconst gridVisibleRowsWithPinnedRowsSelector = createSelectorMemoized(gridVisibleRowsSelector, gridPinnedRowsSelector, (visibleRows, pinnedRows) => {\n  return (pinnedRows.top || []).concat(visibleRows.rows, pinnedRows.bottom || []);\n});\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const getCurrentPageRows = React.useCallback(() => {\n    return gridVisibleRowsWithPinnedRowsSelector(apiRef);\n  }, [apiRef]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return getCurrentPageRows()[rowIndex]?.id;\n  }, [getCurrentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const currentPageRows = getCurrentPageRows();\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const currentPageRows = getCurrentPageRows();\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const currentPageRows = getCurrentPageRows();\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    const currentPageRows = getCurrentPageRows();\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && (colDef.field === GRID_TREE_DATA_GROUPING_FIELD || isGroupingColumn(colDef.field))) {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8305, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/scroll/useGridScroll.js"],"sourcesContent":["import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8461, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/export/utils.js"],"sourcesContent":["import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACO,MAAM,qBAAqB,CAAC,EACjC,MAAM,EACN,OAAO,EACR;IACC,MAAM,UAAU,CAAA,GAAA,qZAAA,CAAA,gCAA6B,AAAD,EAAE;IAC9C,IAAI,QAAQ,MAAM,EAAE;QAClB,OAAO,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,gBAAgB;YAC5C,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAA,MAAO,IAAI,KAAK,KAAK;YACjD,IAAI,QAAQ;gBACV,eAAe,IAAI,CAAC;YACtB;YACA,OAAO;QACT,GAAG,EAAE;IACP;IACA,MAAM,eAAe,QAAQ,UAAU,GAAG,UAAU,CAAA,GAAA,qZAAA,CAAA,uCAAoC,AAAD,EAAE;IACzF,OAAO,aAAa,MAAM,CAAC,CAAA,SAAU,CAAC,OAAO,aAAa;AAC5D;AACO,MAAM,yBAAyB,CAAC,EACrC,MAAM,EACP;IACC,MAAM,uBAAuB,CAAA,GAAA,mZAAA,CAAA,mCAAgC,AAAD,EAAE;IAC9D,MAAM,UAAU,CAAA,GAAA,+YAAA,CAAA,sBAAmB,AAAD,EAAE;IACpC,MAAM,eAAe,OAAO,OAAO,CAAC,eAAe;IACnD,MAAM,WAAW,qBAAqB,MAAM,CAAC,CAAA,KAAM,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK;IACxE,MAAM,aAAa,CAAA,GAAA,+YAAA,CAAA,yBAAsB,AAAD,EAAE;IAC1C,MAAM,mBAAmB,YAAY,KAAK,IAAI,CAAA,MAAO,IAAI,EAAE,KAAK,EAAE;IAClE,MAAM,sBAAsB,YAAY,QAAQ,IAAI,CAAA,MAAO,IAAI,EAAE,KAAK,EAAE;IACxE,SAAS,OAAO,IAAI;IACpB,SAAS,IAAI,IAAI;IACjB,IAAI,aAAa,IAAI,GAAG,GAAG;QACzB,OAAO,SAAS,MAAM,CAAC,CAAA,KAAM,aAAa,GAAG,CAAC;IAChD;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 8500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8506, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js"],"sourcesContent":["import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8656, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8662, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/export/useGridCsvExport.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};"],"names":[],"mappings":";;;AAAA;AAQA;AANA;AAGA;AADA;AADA;AAFA;AAMA;AADA;;;;;;;;;;AAUO,MAAM,mBAAmB,CAAC,QAAQ;IACvC,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ;IACrC,MAAM,2BAA2B,MAAM,gCAAgC;IACvE,MAAM,uBAAuB,CAAC,OAAO,6BAA6B,WAAW,0BAA0B,YAAY,wBAAwB,KAAK;IAChJ,MAAM,eAAe,qUAAM,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC;QAClD,OAAO,KAAK,CAAC,CAAC,eAAe,CAAC;QAC9B,MAAM,kBAAkB,CAAA,GAAA,sYAAA,CAAA,qBAAkB,AAAD,EAAE;YACzC;YACA;QACF;QACA,MAAM,kBAAkB,QAAQ,eAAe,IAAI,sYAAA,CAAA,yBAAsB;QACzE,MAAM,iBAAiB,gBAAgB;YACrC;QACF;QACA,OAAO,CAAA,GAAA,6ZAAA,CAAA,WAAQ,AAAD,EAAE;YACd,SAAS;YACT,QAAQ;YACR,YAAY;gBACV,WAAW,QAAQ,SAAS,IAAI;gBAChC,oBAAoB,QAAQ,kBAAkB,IAAI;gBAClD,gBAAgB,QAAQ,cAAc,IAAI;gBAC1C,4BAA4B,QAAQ,0BAA0B,IAAI;gBAClE,gBAAgB,QAAQ,cAAc,IAAI;YAC5C;YACA;YACA;QACF;IACF,GAAG;QAAC;QAAQ;QAAQ;KAAqB;IACzC,MAAM,kBAAkB,qUAAM,WAAW,CAAC,CAAA;QACxC,OAAO,KAAK,CAAC,CAAC,kBAAkB,CAAC;QACjC,MAAM,MAAM,aAAa;QACzB,MAAM,OAAO,IAAI,KAAK;YAAC,SAAS,cAAc,IAAI,WAAW;gBAAC;gBAAM;gBAAM;aAAK,IAAI;YAAI;SAAI,EAAE;YAC3F,MAAM;QACR;QACA,CAAA,GAAA,mXAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,OAAO,SAAS;IACjC,GAAG;QAAC;QAAQ;KAAa;IACzB,MAAM,eAAe;QACnB;QACA;IACF;IACA,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,cAAc;IAEvC;;GAEC,GACD,MAAM,uBAAuB,qUAAM,WAAW,CAAC,CAAC,cAAc;QAC5D,IAAI,QAAQ,UAAU,EAAE,sBAAsB;YAC5C,OAAO;QACT;QACA,OAAO;eAAI;YAAc;gBACvB,WAAW,WAAW,GAAE,CAAA,GAAA,sVAAA,CAAA,MAAI,AAAD,EAAE,4YAAA,CAAA,wBAAqB,EAAE;oBAClD,SAAS,QAAQ,UAAU;gBAC7B;gBACA,eAAe;YACjB;SAAE;IACJ,GAAG,EAAE;IACL,CAAA,GAAA,iaAAA,CAAA,+BAA4B,AAAD,EAAE,QAAQ,cAAc;AACrD","ignoreList":[0]}},
    {"offset": {"line": 8756, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8762, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/export/useGridPrintExport.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/index.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef(null);\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9074, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9080, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, () => apiRef.current.rootElementRef.current, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};"],"names":[],"mappings":";;;AAAA;AAIA;AAFA;AACA;AAFA;AAAA;;;;;;AAIA,SAAS,yBAAyB,IAAI;IACpC,MAAM,OAAO,SAAS,aAAa,CAAC;IACpC,KAAK,KAAK,CAAC,UAAU,GAAG;IACxB,KAAK,KAAK,CAAC,UAAU,GAAG;IACxB,KAAK,KAAK,CAAC,OAAO,GAAG;IACrB,KAAK,WAAW,GAAG;IACnB,SAAS,IAAI,CAAC,WAAW,CAAC;IAC1B,MAAM,QAAQ,SAAS,WAAW;IAClC,MAAM,UAAU,CAAC;IACjB,MAAM,YAAY,OAAO,YAAY;IACrC,UAAU,eAAe;IACzB,UAAU,QAAQ,CAAC;IACnB,IAAI;QACF,SAAS,WAAW,CAAC;IACvB,SAAU;QACR,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;AACF;AACA,SAAS,gBAAgB,IAAI;IAC3B,IAAI,UAAU,SAAS,EAAE;QACvB,UAAU,SAAS,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC;YACxC,yBAAyB;QAC3B;IACF,OAAO;QACL,yBAAyB;IAC3B;AACF;AACA,SAAS,mBAAmB,OAAO;IACjC,6FAA6F;IAC7F,IAAI,OAAO,YAAY,IAAI,YAAY;QACrC,OAAO;IACT;IAEA,iGAAiG;IACjG,2DAA2D;IAC3D,oFAAoF;IACpF,IAAI,WAAW,CAAC,QAAQ,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,cAAc,IAAI,CAAC,IAAI,GAAG;QAC9E,OAAO;IACT;IACA,OAAO;AACT;AAMO,MAAM,mBAAmB,CAAC,QAAQ;IACvC,MAAM,2BAA2B,MAAM,gCAAgC;IACvE,MAAM,uBAAuB,CAAC,OAAO,6BAA6B,WAAW,0BAA0B,kBAAkB,wBAAwB,KAAK;IACtJ,MAAM,6BAA6B,MAAM,0BAA0B;IACnE,MAAM,aAAa,qUAAM,WAAW,CAAC,CAAA;QACnC,IAAI,CAAC,CAAA,GAAA,wXAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ;YAC1B;QACF;QAEA,2CAA2C;QAC3C,IAAI,mBAAmB,MAAM,MAAM,GAAG;YACpC;QACF;QACA,IAAI,aAAa;QACjB,MAAM,eAAe,OAAO,OAAO,CAAC,eAAe;QACnD,IAAI,aAAa,IAAI,GAAG,GAAG;YACzB,aAAa,OAAO,OAAO,CAAC,YAAY,CAAC;gBACvC,gBAAgB;gBAChB,WAAW;gBACX,oBAAoB;gBACpB,gBAAgB;YAClB;QACF,OAAO;YACL,MAAM,cAAc,CAAA,GAAA,sZAAA,CAAA,wBAAqB,AAAD,EAAE;YAC1C,IAAI,aAAa;gBACf,MAAM,aAAa,OAAO,OAAO,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,YAAY,KAAK;gBACjF,aAAa,CAAA,GAAA,6ZAAA,CAAA,qBAAkB,AAAD,EAAE,YAAY;oBAC1C,YAAY;wBACV,WAAW;wBACX,oBAAoB;wBACpB,gBAAgB;oBAClB;oBACA;gBACF;YACF;QACF;QACA,aAAa,OAAO,OAAO,CAAC,4BAA4B,CAAC,iBAAiB;QAC1E,IAAI,YAAY;YACd,gBAAgB;YAChB,OAAO,OAAO,CAAC,YAAY,CAAC,iBAAiB;QAC/C;IACF,GAAG;QAAC;QAAQ;QAAsB;KAA2B;IAC7D,CAAA,GAAA,8YAAA,CAAA,6BAA0B,AAAD,EAAE,QAAQ,IAAM,OAAO,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW;IAC3F,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,iBAAiB,MAAM,eAAe;AACxE","ignoreList":[0]}},
    {"offset": {"line": 9182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9188, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/events/useGridEvents.js"],"sourcesContent":["import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}"],"names":[],"mappings":";;;AAAA;;AAKO,SAAS,cAAc,MAAM,EAAE,KAAK;IACzC,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,qBAAqB,MAAM,mBAAmB;IAC9E,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,2BAA2B,MAAM,yBAAyB;IAC1F,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,2BAA2B,MAAM,yBAAyB;IAC1F,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,oBAAoB,MAAM,kBAAkB;IAC5E,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,mBAAmB,MAAM,iBAAiB;IAC1E,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,qBAAqB,MAAM,mBAAmB;IAC9E,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,qBAAqB,MAAM,mBAAmB;IAC9E,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,aAAa,MAAM,WAAW;IAC9D,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,mBAAmB,MAAM,iBAAiB;IAC1E,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,eAAe,MAAM,aAAa;IAClE,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,wBAAwB,MAAM,sBAAsB;IACpF,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,uBAAuB,MAAM,qBAAqB;IAClF,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,YAAY,MAAM,UAAU;IAC5D,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,aAAa,MAAM,WAAW;IAC9D,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,kBAAkB,MAAM,gBAAgB;IACxE,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,YAAY,MAAM,UAAU;IAC5D,CAAA,GAAA,0YAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,eAAe,MAAM,aAAa;AACpE","ignoreList":[0]}},
    {"offset": {"line": 9212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9218, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,0BAA0B,CAAA;IACrC,MAAM,cAAc,qUAAM,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC;QAChD,MAAM,gBAAgB,OAAO,OAAO,CAAC,4BAA4B,CAAC,eAAe,CAAC,GAAG;QACrF,OAAO;IACT,GAAG;QAAC;KAAO;IACX,MAAM,eAAe,qUAAM,WAAW,CAAC,CAAA;QACrC,MAAM,WAAW,OAAO,OAAO,CAAC,4BAA4B,CAAC,gBAAgB;YAC3E,WAAW,EAAE;QACf,GAAG;YACD;QACF;QACA,SAAS,SAAS,CAAC,OAAO,CAAC,CAAA;YACzB;QACF;QACA,OAAO,OAAO,CAAC,WAAW;IAC5B,GAAG;QAAC;KAAO;IACX,MAAM,sBAAsB;QAC1B;QACA;IACF;IACA,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,qBAAqB;AAChD","ignoreList":[0]}},
    {"offset": {"line": 9251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9257, "column": 0}, "map": {"version":3,"sources":["file:///Users/adryan/Code/EMCExplore/EMC_Explore_frontend/node_modules/.pnpm/%40mui%2Bx-data-grid%407.27.0_%40emotion%2Breact%4011.14.0_%40types%2Breact%4019.0.10_react%4019.0.0__%40emot_0a137e96c821fabf96a335fb5438a83e/node_modules/%40mui/x-data-grid/hooks/features/overlays/useGridOverlays.js"],"sourcesContent":["import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\nimport { gridPinnedRowsCountSelector } from \"../rows/gridRowsSelector.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const noRows = totalRowCount === 0 && pinnedRowsCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};"],"names":[],"mappings":";;;AACA;AACA;AAFA;AAIA;AADA;;;;;;;AAOO,MAAM,kBAAkB;IAC7B,MAAM,SAAS,CAAA,GAAA,qYAAA,CAAA,oBAAiB,AAAD;IAC/B,MAAM,YAAY,CAAA,GAAA,oYAAA,CAAA,mBAAgB,AAAD;IACjC,MAAM,gBAAgB,CAAA,GAAA,mYAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,+YAAA,CAAA,uBAAoB;IAClE,MAAM,kBAAkB,CAAA,GAAA,mYAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,mZAAA,CAAA,+BAA4B;IAC5E,MAAM,kBAAkB,CAAA,GAAA,mYAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,+YAAA,CAAA,8BAA2B;IAC3E,MAAM,SAAS,kBAAkB,KAAK,oBAAoB;IAC1D,MAAM,UAAU,CAAA,GAAA,mYAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,+YAAA,CAAA,0BAAuB;IAC/D,MAAM,oBAAoB,CAAC,WAAW;IACtC,MAAM,uBAAuB,CAAC,WAAW,gBAAgB,KAAK,oBAAoB;IAClF,IAAI,cAAc;IAClB,IAAI,wBAAwB;IAC5B,IAAI,mBAAmB;QACrB,cAAc;IAChB;IACA,IAAI,sBAAsB;QACxB,cAAc;IAChB;IACA,IAAI,SAAS;QACX,cAAc;QACd,wBAAwB,UAAU,SAAS,EAAE,gBAAgB,CAAC,SAAS,kBAAkB,UAAU,IAAI;IACzG;IACA,OAAO;QACL;QACA;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 9298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}